{
  "Preset": {
    "FixLength": [
      "Point",
      "Line",
      "Arc",
      "Angle",
      "Circle",
      "Equation"
    ],
    "VariableLength": [
      "Shape",
      "Collinear",
      "Cocircular",
      "Polygon"
    ],
    "Construction": [
      "Shape",
      "Collinear",
      "Cocircular"
    ],
    "BasicEntity": [
      "Point",
      "Line",
      "Arc",
      "Angle",
      "Polygon",
      "Circle"
    ],
    "Attribution": [
      "Free"
    ],
    "Algebra": [
      "Equal",
      "Equation"
    ]
  },
  "Entity": {
    "Circle(O)": {
      "ee_check": [
        "Circle(O)"
      ],
      "multi": [],
      "extend": []
    },
    "Triangle(ABC)": {
      "ee_check": [
        "Polygon(ABC)"
      ],
      "multi": [],
      "extend": []
    },
    "RightTriangle(ABC)": {
      "ee_check": [
        "Polygon(ABC)"
      ],
      "multi": [],
      "extend": [
        "PerpendicularBetweenLine(AB,CB)"
      ]
    },
    "IsoscelesTriangle(ABC)": {
      "ee_check": [
        "Polygon(ABC)"
      ],
      "multi": [],
      "extend": [
        "Equal(LengthOfLine(AB),LengthOfLine(AC))"
      ]
    },
    "IsoscelesRightTriangle(ABC)": {
      "ee_check": [
        "Polygon(ABC)"
      ],
      "multi": [],
      "extend": [
        "RightTriangle(CAB)",
        "IsoscelesTriangle(ABC)"
      ]
    },
    "EquilateralTriangle(ABC)": {
      "ee_check": [
        "Polygon(ABC)"
      ],
      "multi": [
        "BCA",
        "CAB"
      ],
      "extend": [
        "Equal(LengthOfLine(AB),LengthOfLine(BC))",
        "Equal(LengthOfLine(BC),LengthOfLine(AC))",
        "Equal(MeasureOfAngle(ABC),60)"
      ]
    },
    "Kite(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "multi": [
        "CDAB"
      ],
      "extend": [
        "Equal(LengthOfLine(AB),LengthOfLine(AD))",
        "Equal(LengthOfLine(CB),LengthOfLine(CD))"
      ]
    },
    "Parallelogram(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "multi": [
        "BCDA",
        "CDAB",
        "DABC"
      ],
      "extend": [
        "ParallelBetweenLine(AD,BC)",
        "ParallelBetweenLine(BA,CD)"
      ]
    },
    "Rhombus(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "multi": [
        "BCDA",
        "CDAB",
        "DABC"
      ],
      "extend": [
        "Parallelogram(ABCD)",
        "Kite(ABCD)",
        "Kite(BCDA)"
      ]
    },
    "Rectangle(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "multi": [
        "BCDA",
        "CDAB",
        "DABC"
      ],
      "extend": [
        "Parallelogram(ABCD)",
        "PerpendicularBetweenLine(AB,CB)",
        "PerpendicularBetweenLine(BC,DC)",
        "PerpendicularBetweenLine(CD,AD)",
        "PerpendicularBetweenLine(DA,BA)"
      ]
    },
    "Square(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "multi": [
        "BCDA",
        "CDAB",
        "DABC"
      ],
      "extend": [
        "Rhombus(ABCD)",
        "Rectangle(ABCD)"
      ]
    },
    "Trapezoid(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "multi": [
        "CDAB"
      ],
      "extend": [
        "ParallelBetweenLine(AD,BC)"
      ]
    },
    "IsoscelesTrapezoid(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "multi": [
        "CDAB"
      ],
      "extend": [
        "Trapezoid(ABCD)",
        "Equal(LengthOfLine(AB),LengthOfLine(CD))"
      ]
    },
    "RightTrapezoid(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "multi": [],
      "extend": [
        "Trapezoid(ABCD)",
        "PerpendicularBetweenLine(DA,BA)",
        "PerpendicularBetweenLine(AB,CB)"
      ]
    }
  }, 
  "Relation": {
    "IsMidpointOfLine(M,AB)": {
      "ee_check": [
        "Point(M)",
        "Line(AB)",
        "Collinear(AMB)"
      ],
      "fv_check": [
        "M,AB"
      ],
      "multi": [
        "M,BA"
      ],
      "extend": [
        "Equal(LengthOfLine(AM),LengthOfLine(MB))"
      ],
      "find": ["Line(AB)"],
      "construct": ["M"],
      "fixed": [true]
    },
    "IsMidpointOfArc(M,OAB)": {
      "ee_check": [
        "Point(M)",
        "Arc(OAB)",
        "Cocircular(O,AMB)"
      ],
      "fv_check": [
        "M,OAB"
      ],
      "multi": [],
      "extend": [
        "Equal(LengthOfArc(OAM),LengthOfArc(OMB))"
      ],
      "find": ["Circle(O)", "Cocircular(O,AB)", "Arc(OAB)"], 
      "construct": ["M"],
      "fixed": [true]
    },
    "ParallelBetweenLine(AB,CD)": {
      "ee_check": [
        "Line(AB)",
        "Line(CD)"
      ],
      "fv_check": [
        "AB,CD"
      ],
      "multi": [
        "DC,BA"
      ],
      "extend": [],
      "find": ["Line(AB)", "Point(C)"], 
      "construct": ["D"],
      "fixed": [true]
    },
    "PerpendicularBetweenLine(AO,CO)": {
      "ee_check": [
        "Line(AO)",
        "Line(CO)"
      ],
      "fv_check": [
        "AO,CO"
      ],
      "multi": [],
      "extend": [
        "Equal(MeasureOfAngle(AOC),90)"
      ],
      "find": ["Line(AO)"], 
      "construct": ["C"],
      "fixed": [true]
    },
    "IsPerpendicularBisectorOfLine(CO,AB)": {
      "ee_check": [
        "Line(CO)",
        "Line(AB)",
        "Collinear(AOB)"
      ],
      "fv_check": [
        "CO,AB"
      ],
      "multi": [],
      "extend": [
        "PerpendicularBetweenLine(AO,CO)",
        "PerpendicularBetweenLine(CO,BO)",
        "IsMidpointOfLine(O,AB)"
      ],
      "find": ["Line(AB)"], 
      "construct": ["O", "C"],
      "fixed": [true, true]
    },
    "IsBisectorOfAngle(BD,ABC)": {
      "ee_check": [
        "Line(BD)",
        "Angle(ABC)"
      ],
      "fv_check": [
        "BD,ABC"
      ],
      "multi": [],
      "extend": [
        "Equal(MeasureOfAngle(ABD),MeasureOfAngle(DBC))"
      ],
      "find": ["Angle(ABC)"], 
      "construct": ["D"],
      "fixed": [true]
    },
    "IsMedianOfTriangle(AD,ABC)": {
      "ee_check": [
        "Line(AD)",
        "Polygon(ABC)",
        "Collinear(BDC)"
      ],
      "fv_check": [
        "AD,ABC"
      ],
      "multi": [],
      "extend": [
        "IsMidpointOfLine(D,BC)"
      ],
      "find": ["Polygon(ABC)"], 
      "construct": ["D"],
      "fixed": [true]
    },
    "IsAltitudeOfTriangle(AD,ABC)": {
      "ee_check": [
        "Line(AD)",
        "Polygon(ABC)",
        "Collinear(BDC)"
      ],
      "fv_check": [
        "AD,ABC"
      ],
      "multi": [],
      "extend": [
        "PerpendicularBetweenLine(BD,AD)",
        "PerpendicularBetweenLine(AD,CD)"
      ],
      "find": ["Polygon(ABC)"], 
      "construct": ["D"],
      "fixed": [true]
    },
    "IsMidsegmentOfTriangle(DE,ABC)": {
      "ee_check": [
        "Line(DE)",
        "Polygon(ABC)",
        "Collinear(ADB)",
        "Collinear(AEC)"
      ],
      "fv_check": [
        "DE,ABC"
      ],
      "multi": [],
      "extend": [
        "IsMidpointOfLine(D,AB)",
        "IsMidpointOfLine(E,AC)"
      ],
      "find": ["Polygon(ABC)"], 
      "construct": ["D", "E"],
      "fixed": [true, true]
    },
    "IsCircumcenterOfTriangle(O,ABC)": {
      "ee_check": [
        "Point(O)",
        "Polygon(ABC)",
        "Cocircular(O,ABC)"
      ],
      "fv_check": [
        "O,ABC"
      ],
      "multi": [
        "O,BCA",
        "O,CAB"
      ],
      "extend": [],
      "find": ["Polygon(ABC)"], 
      "construct": ["O"],
      "fixed": [true]
    },
    "IsIncenterOfTriangle(O,ABC)": {
      "ee_check": [
        "Point(O)",
        "Polygon(ABC)"
      ],
      "fv_check": [
        "O,ABC"
      ],
      "multi": [
        "O,BCA",
        "O,CAB"
      ],
      "extend": [
        "IsBisectorOfAngle(AO,CAB)",
        "IsBisectorOfAngle(BO,ABC)",
        "IsBisectorOfAngle(CO,BCA)"
      ],
      "find": ["Polygon(ABC)"], 
      "construct": ["O"],
      "fixed": [true]
    },
    "IsCentroidOfTriangle(O,ABC)": {
      "ee_check": [
        "Point(O)",
        "Polygon(ABC)"
      ],
      "fv_check": [
        "O,ABC"
      ],
      "multi": [
        "O,BCA",
        "O,CAB"
      ],
      "extend": [],
      "find": ["Polygon(ABC)"], 
      "construct": ["O"],
      "fixed": [true]
    },
    "IsOrthocenterOfTriangle(O,ABC)": {
      "ee_check": [
        "Point(O)",
        "Polygon(ABC)"
      ],
      "fv_check": [
        "O,ABC",
        "A,ABC",
        "B,ABC",
        "C,ABC"
      ],
      "multi": [
        "O,BCA",
        "O,CAB"
      ],
      "extend": [],
      "find": ["Polygon(ABC)"], 
      "construct": ["O"],
      "fixed": [true]
    },
    "CongruentBetweenTriangle(ABC,DEF)": {
      "ee_check": [
        "Polygon(ABC)",
        "Polygon(DEF)"
      ],
      "multi": [
        "BCA,EFD",
        "CAB,FDE"
      ],
      "extend": [],
      "find": ["Polygon(ABC)", "Point(D)"], 
      "construct": ["E", "F"],
      "fixed": [false, true]
    },
    "MirrorCongruentBetweenTriangle(ABC,DEF)": {
      "ee_check": [
        "Polygon(ABC)",
        "Polygon(DEF)"
      ],
      "multi": [
        "BCA,FDE",
        "CAB,EFD"
      ],
      "extend": [
        "CongruentBetweenTriangle(ABC,DFE)"
      ],
      "find": ["Polygon(ABC)", "Point(D)"], 
      "construct": ["E", "F"],
      "fixed": [false, true]
    },
    "SimilarBetweenTriangle(ABC,DEF)": {
      "ee_check": [
        "Polygon(ABC)",
        "Polygon(DEF)"
      ],
      "multi": [
        "BCA,EFD",
        "CAB,FDE"
      ],
      "extend": [],
      "find": ["Polygon(ABC)", "Line(DE)"], 
      "construct": ["F"],
      "fixed": [true]
    },
    "MirrorSimilarBetweenTriangle(ABC,DEF)": {
      "ee_check": [
        "Polygon(ABC)",
        "Polygon(DEF)"
      ],
      "multi": [
        "BCA,FDE",
        "CAB,EFD"
      ],
      "extend": [
        "SimilarBetweenTriangle(ABC,DFE)"
      ],
      "find": ["Polygon(ABC)", "Line(DE)"], 
      "construct": ["F"],
      "fixed": [true]
    },
    "IsAltitudeOfQuadrilateral(EF,ABCD)": {
      "ee_check": [
        "Line(EF)",
        "Polygon(ABCD)",
        "Collinear(AEB)",
        "Collinear(CFD)"
      ],
      "fv_check": [
        "EF,ABCD",
        "AF,ABCD",
        "DF,ABCD",
        "AC,ABCD",
        "DB,ABCD"
      ],
      "multi": [],
      "extend": [
        "Trapezoid(ABCD)",  
        "PerpendicularBetweenLine(BF,EF)",
        "PerpendicularBetweenLine(EF,CF)",
        "PerpendicularBetweenLine(DE,FE)",
        "PerpendicularBetweenLine(FE,AE)"
      ],
      "find": ["Trapezoid(ABCD)", "Collinear(AEB)"], 
      "construct": ["F"],
      "fixed": [false]
    },
    "IsMidsegmentOfQuadrilateral(EF,ABCD)": {
      "ee_check": [
        "Line(EF)",
        "Polygon(ABCD)",
        "Collinear(AEB)",
        "Collinear(DFC)"
      ],
      "fv_check": [
        "FE,CDAB"
      ],
      "multi": [
        "FE,CDAB"
      ],
      "extend": [
        "IsMidpointOfLine(E,AB)",
        "IsMidpointOfLine(F,CD)"
      ],
      "find": ["Polygon(ABCD)"],
      "construct": ["E", "F"],
      "fixed": [true, true]
    },
    "IsCircumcenterOfQuadrilateral(O,ABCD)": {
      "ee_check": [
        "Point(O)",
        "Polygon(ABCD)",
        "Cocircular(O,ABCD)"
      ],
      "fv_check": [
        "O,ABCD"
      ],
      "multi": [
        "O,BCDA",
        "O,CDAB",
        "O,DABC"
      ],
      "extend": [],
      "find": ["Polygon(ABC)"],
      "construct": ["O", "D"],
      "fixed": [true, true]
    },
    "IsIncenterOfQuadrilateral(O,ABCD)": {
      "ee_check": [
        "Point(O)",
        "Polygon(ABCD)"
      ],
      "fv_check": [
        "O,ABCD"
      ],
      "multi": [
        "O,BCDA",
        "O,CDAB",
        "O,DABC"
      ],
      "extend": [
        "IsBisectorOfAngle(AO,DAB)",
        "IsBisectorOfAngle(BO,ABC)",
        "IsBisectorOfAngle(CO,BCD)",
        "IsBisectorOfAngle(DO,CDA)"
      ],
      "find": ["Polygon(ABCD)"],
      "construct": ["O"],
      "fixed": [true]
    },
    "CongruentBetweenQuadrilateral(ABCD,EFGH)": {
      "ee_check": [
        "Polygon(ABCD)",
        "Polygon(EFGH)"
      ],
      "multi": [
        "BCDA,FGHE",
        "CDAB,GHEF",
        "DABC,HEFG"
      ],
      "extend": [],
      "find": ["Polygon(ABCD)"],
      "construct": ["E", "F", "G", "H"],
      "fixed": [false, true, true, true]
    },
    "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)": {
      "ee_check": [
        "Polygon(ABCD)",
        "Polygon(EFGH)"
      ],
      "multi": [
        "BCDA,HEFG",
        "CDAB,GHEF",
        "DABC,FGHE"
      ],
      "extend": [
        "CongruentBetweenQuadrilateral(ABCD,EHGF)"
      ],
      "find": ["Polygon(ABCD)"],
      "construct": ["E", "F", "G", "H"],
      "fixed": [false, true, true, true]
    },
    "SimilarBetweenQuadrilateral(ABCD,EFGH)": {
      "ee_check": [
        "Polygon(ABCD)",
        "Polygon(EFGH)"
      ],
      "multi": [
        "BCDA,FGHE",
        "CDAB,GHEF",
        "DABC,HEFG"
      ],
      "extend": [],
      "find": ["Polygon(ABCD)", "Line(EF)"],
      "construct": ["G", "H"],
      "fixed": [true, true]
    },
    "MirrorSimilarBetweenQuadrilateral(ABCD,EFGH)": {
      "ee_check": [
        "Polygon(ABCD)",
        "Polygon(EFGH)"
      ],
      "multi": [
        "BCDA,HEFG",
        "CDAB,GHEF",
        "DABC,FGHE"
      ],
      "extend": [
        "SimilarBetweenQuadrilateral(ABCD,EHGF)"
      ],
      "find": ["Polygon(ABCD)", "Line(EF)"],
      "construct": ["G", "H"],
      "fixed": [true, true]
    },
    "CongruentBetweenArc(OAB,OCD)": {
      "ee_check": [
        "Arc(OAB)",
        "Arc(OCD)",
        "Cocircular(O,AB)",
        "Cocircular(O,CD)"
      ],
      "multi": [],
      "extend": ["Equal(LengthOfArc(OAB),LengthOfArc(OCD))"],
      "find": ["Circle(O)", "Arc(OAB)", "Cocircular(O,C)"],
      "construct": ["D"],
      "fixed": [true]
    },
    "SimilarBetweenArc(OAB,OCD)": {
      "ee_check": [
        "Arc(OAB)",
        "Arc(OCD)"
      ],
      "multi": [],
      "extend": [],
      "find": ["Circle(O)", "Arc(OAB)", "Cocircular(O,C)"],
      "construct": ["D"],
      "fixed": [false]
    },
    "IsDiameterOfCircle(AB,O)": {
      "ee_check": [
        "Line(AB)",
        "Cocircular(O,AB)",
        "Collinear(AOB)"
      ],
      "fv_check": [
        "AB,O"
      ],
      "multi": [
        "BA,O"
      ],
      "extend": ["IsMidpointOfLine(O,AB)"],
      "find": ["Line(AB)"],
      "construct": ["O"],
      "fixed": [true] 
    },
    "IsTangentOfCircle(PA,O)": {
      "ee_check": [
        "Line(PA)",
        "Cocircular(O,A)"
      ],
      "fv_check": [
        "PA,O"
      ],
      "multi": [],
      "extend": [
        "PerpendicularBetweenLine(PA,OA)"
      ],
      "find": ["Circle(O)", "Cocircular(O,A)"],
      "construct": ["P"],
      "fixed": [true]
    },
    "IsCentreOfCircle(P,O)": {
      "ee_check": [
        "Point(P)",
        "Circle(O)"
      ],
      "fv_check": [
        "P,O",
        "O,O"
      ],
      "multi": [],
      "extend": [],
      "find": ["Circle(O)"],
      "construct": ["P"],
      "fixed": [false]
    }
  },
  "Attribution": {
    "LengthOfLine(AB)": {
      "ee_check": [
        "Line(AB)"
      ],
      "sym": "ll",
      "multi": [
        "BA"
      ]
    },
    "MeasureOfAngle(ABC)": {
      "ee_check": [
        "Angle(ABC)"
      ],
      "sym": "ma",
      "multi": []
    },
    "PerimeterOfTriangle(ABC)": {
      "ee_check": [
        "Polygon(ABC)"
      ],
      "sym": "pt",
      "multi": [
        "BCA",
        "CAB"
      ]
    },
    "AreaOfTriangle(ABC)": {
      "ee_check": [
        "Polygon(ABC)"
      ],
      "sym": "at",
      "multi": [
        "BCA",
        "CAB"
      ]
    },
    "HeightOfTriangle(ABC)": {
      "ee_check": [
        "Polygon(ABC)"
      ],
      "sym": "ht",
      "multi": []
    },
    "RatioOfSimilarTriangle(ABC,DEF)": {
      "ee_check": [
        "Polygon(ABC)",
        "Polygon(DEF)"
      ],
      "sym": "rst",
      "multi": [
        "BCA,EFD",
        "CAB,FDE"
      ]
    },
    "RatioOfMirrorSimilarTriangle(ABC,DEF)": {
      "ee_check": [
        "Polygon(ABC)",
        "Polygon(DEF)"
      ],
      "sym": "rmt",
      "multi": [
        "BCA,FDE",
        "CAB,EFD"
      ]
    },
    "PerimeterOfQuadrilateral(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "sym": "pq",
      "multi": [
        "BCDA",
        "CDAB",
        "DABC"
      ]
    },
    "AreaOfQuadrilateral(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "sym": "aq",
      "multi": [
        "BCDA",
        "CDAB",
        "DABC"
      ]
    },
    "HeightOfQuadrilateral(ABCD)": {
      "ee_check": [
        "Polygon(ABCD)"
      ],
      "sym": "hq",
      "multi": []
    },
    "RatioOfSimilarQuadrilateral(ABCD,EFGH)": {
      "ee_check": [
        "Polygon(ABCD)",
        "Polygon(EFGH)"
      ],
      "sym": "rsq",
      "multi": [
        "BCDA,FGHE",
        "CDAB,GHEF",
        "DABC,HEFG"
      ]
    },
    "RatioOfMirrorSimilarQuadrilateral(ABCD,EFGH)": {
      "ee_check": [
        "Polygon(ABCD)",
        "Polygon(EFGH)"
      ],
      "sym": "rmq",
      "multi": [
        "BCDA,HEFG",
        "CDAB,GHEF",
        "DABC,FGHE"
      ]
    },
    "LengthOfArc(OAB)": {
      "ee_check": [
        "Arc(OAB)"
      ],
      "sym": "la",
      "multi": []
    },
    "MeasureOfArc(OAB)": {
      "ee_check": [
        "Arc(OAB)"
      ],
      "sym": "mar",
      "multi": []
    },
    "RatioOfSimilarArc(OAB,OCD)": {
      "ee_check": [
        "Arc(OAB)",
        "Arc(OCD)"
      ],
      "sym": "rsa",
      "multi": []
    },
    "RadiusOfCircle(O)": {
      "ee_check": [
        "Circle(O)"
      ],
      "sym": "rc",
      "multi": []
    },
    "DiameterOfCircle(O)": {
      "ee_check": [
        "Circle(O)"
      ],
      "sym": "dc",
      "multi": []
    },
    "PerimeterOfCircle(O)": {
      "ee_check": [
        "Circle(O)"
      ],
      "sym": "pc",
      "multi": []
    },
    "AreaOfCircle(O)": {
      "ee_check": [
        "Circle(O)"
      ],
      "sym": "ac",
      "multi": []
    },
    "PerimeterOfSector(OAB)": {
      "ee_check": [
        "Arc(OAB)"
      ],
      "sym": "ps",
      "multi": []
    },
    "AreaOfSector(OAB)": {
      "ee_check": [
        "Arc(OAB)"
      ],
      "sym": "as",
      "multi": []
    }
  }
}