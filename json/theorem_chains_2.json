{
    "0": {
        "midpoint_of_line_judgment(M,AB)": {
            "premise": "Collinear(AMB)&Equal(LengthOfLine(AM),LengthOfLine(MB))",
            "conclusion": "IsMidpointOfLine(M,AB)"
        },
        "parallelogram_judgment_diagonal_bisection(ABCD,O)": {
            "premise": "Polygon(ACBD)&Collinear(AMB)&Collinear(CMD)&IsMidpointOfLine(M,AB)&IsMidpointOfLine(M,CD)",
            "conclusion": "Parallelogram(ACBD)"
        }
    },
    "1": {
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        }
    },
    "2": {
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        }
    },
    "3": {
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_corresponding_angle(AB,CD,E)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(EAC)",
            "conclusion": "Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))"
        }
    },
    "4": {
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_alternate_interior_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,CD)&Line(AD)",
            "conclusion": "Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))"
        }
    },
    "5": {
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_ipsilateral_internal_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,CD)&Line(AC)",
            "conclusion": "Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)"
        }
    },
    "6": {
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "midsegment_of_triangle_judgment_parallel(DE,ABC)": {
            "premise": "Polygon(ECD)&Collinear(EAC)&Collinear(EBD)&Line(AB)&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(EA),LengthOfLine(CA))",
            "conclusion": "IsMidsegmentOfTriangle(AB,ECD)"
        }
    },
    "7": {
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "midsegment_of_quadrilateral_judgment_parallel(EF,ABCD)": {
            "premise": "Collinear(EAC)&Collinear(FBD)&Line(AB)&Trapezoid(ABCD&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(EA),LengthOfLine(CA))",
            "conclusion": "IsMidsegmentOfQuadrilateral(AB,ECDF)"
        }
    },
    "8": {
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ACDB)&ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CA,DB)",
            "conclusion": "Parallelogram(ACDB)"
        }
    },
    "9": {
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(BACD)&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "Parallelogram(BACD)"
        }
    },
    "10": {
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "trapezoid_judgment_parallel(ABCD)": {
            "premise": "Polygon(ACDB)&ParallelBetweenLine(AB,CD)&~ParallelBetweenLine(CA,DB)",
            "conclusion": "Trapezoid(ACDB)"
        }
    },
    "11": {
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        }
    },
    "12": {
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        }
    },
    "13": {
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_corresponding_angle(AB,CD,E)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(EAC)",
            "conclusion": "Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))"
        }
    },
    "14": {
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_alternate_interior_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,CD)&Line(AD)",
            "conclusion": "Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))"
        }
    },
    "15": {
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_ipsilateral_internal_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,CD)&Line(AC)",
            "conclusion": "Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)"
        }
    },
    "16": {
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "midsegment_of_triangle_judgment_parallel(DE,ABC)": {
            "premise": "Polygon(ECD)&Collinear(EAC)&Collinear(EBD)&Line(AB)&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(EA),LengthOfLine(CA))",
            "conclusion": "IsMidsegmentOfTriangle(AB,ECD)"
        }
    },
    "17": {
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "midsegment_of_quadrilateral_judgment_parallel(EF,ABCD)": {
            "premise": "Collinear(EAC)&Collinear(FBD)&Line(AB)&Trapezoid(ABCD&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(EA),LengthOfLine(CA))",
            "conclusion": "IsMidsegmentOfQuadrilateral(AB,ECDF)"
        }
    },
    "18": {
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ACDB)&ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CA,DB)",
            "conclusion": "Parallelogram(ACDB)"
        }
    },
    "19": {
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(BACD)&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "Parallelogram(BACD)"
        }
    },
    "20": {
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "trapezoid_judgment_parallel(ABCD)": {
            "premise": "Polygon(ACDB)&ParallelBetweenLine(AB,CD)&~ParallelBetweenLine(CA,DB)",
            "conclusion": "Trapezoid(ACDB)"
        }
    },
    "21": {
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        }
    },
    "22": {
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        }
    },
    "23": {
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_corresponding_angle(AB,CD,E)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(EAC)",
            "conclusion": "Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))"
        }
    },
    "24": {
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_alternate_interior_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,CD)&Line(AD)",
            "conclusion": "Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))"
        }
    },
    "25": {
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_ipsilateral_internal_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,CD)&Line(AC)",
            "conclusion": "Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)"
        }
    },
    "26": {
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "midsegment_of_triangle_judgment_parallel(DE,ABC)": {
            "premise": "Polygon(ECD)&Collinear(EAC)&Collinear(EBD)&Line(AB)&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(EA),LengthOfLine(CA))",
            "conclusion": "IsMidsegmentOfTriangle(AB,ECD)"
        }
    },
    "27": {
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "midsegment_of_quadrilateral_judgment_parallel(EF,ABCD)": {
            "premise": "Collinear(EAC)&Collinear(FBD)&Line(AB)&Trapezoid(ABCD&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(EA),LengthOfLine(CA))",
            "conclusion": "IsMidsegmentOfQuadrilateral(AB,ECDF)"
        }
    },
    "28": {
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ACDB)&ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CA,DB)",
            "conclusion": "Parallelogram(ACDB)"
        }
    },
    "29": {
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(BACD)&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "Parallelogram(BACD)"
        }
    },
    "30": {
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "trapezoid_judgment_parallel(ABCD)": {
            "premise": "Polygon(ACDB)&ParallelBetweenLine(AB,CD)&~ParallelBetweenLine(CA,DB)",
            "conclusion": "Trapezoid(ACDB)"
        }
    },
    "31": {
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        },
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,EF)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,EF)"
        }
    },
    "32": {
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        },
        "parallel_property_corresponding_angle(AB,CD,E)": {
            "premise": "ParallelBetweenLine(AB,EF)&Collinear(CAE)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(AEF))"
        }
    },
    "33": {
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        },
        "parallel_property_alternate_interior_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,EF)&Line(AF)",
            "conclusion": "Equal(MeasureOfAngle(BAF),MeasureOfAngle(EFA))"
        }
    },
    "34": {
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        },
        "parallel_property_ipsilateral_internal_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,EF)&Line(AE)",
            "conclusion": "Equal(Add(MeasureOfAngle(BAE),MeasureOfAngle(AEF)),180)"
        }
    },
    "35": {
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        },
        "midsegment_of_triangle_judgment_parallel(DE,ABC)": {
            "premise": "Polygon(CEF)&Collinear(CAE)&Collinear(CBF)&Line(AB)&ParallelBetweenLine(AB,EF)&Equal(LengthOfLine(CA),LengthOfLine(EA))",
            "conclusion": "IsMidsegmentOfTriangle(AB,CEF)"
        }
    },
    "36": {
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        },
        "midsegment_of_quadrilateral_judgment_parallel(EF,ABCD)": {
            "premise": "Collinear(CAE)&Collinear(DBF)&Line(AB)&Trapezoid(ABCD&ParallelBetweenLine(AB,EF)&Equal(LengthOfLine(CA),LengthOfLine(EA))",
            "conclusion": "IsMidsegmentOfQuadrilateral(AB,CEFD)"
        }
    },
    "37": {
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        },
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(AEFB)&ParallelBetweenLine(AB,EF)&ParallelBetweenLine(EA,FB)",
            "conclusion": "Parallelogram(AEFB)"
        }
    },
    "38": {
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(BAEF)&ParallelBetweenLine(AB,EF)&Equal(LengthOfLine(AB),LengthOfLine(EF))",
            "conclusion": "Parallelogram(BAEF)"
        }
    },
    "39": {
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        },
        "trapezoid_judgment_parallel(ABCD)": {
            "premise": "Polygon(AEFB)&ParallelBetweenLine(AB,EF)&~ParallelBetweenLine(EA,FB)",
            "conclusion": "Trapezoid(AEFB)"
        }
    },
    "40": {
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BA,CA)&PerpendicularBetweenLine(AC,DC)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(AB,EF)"
        }
    },
    "41": {
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BA,CA)&PerpendicularBetweenLine(AC,DC)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        }
    },
    "42": {
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BA,CA)&PerpendicularBetweenLine(AC,DC)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_corresponding_angle(AB,CD,E)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(EAC)",
            "conclusion": "Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))"
        }
    },
    "43": {
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BA,CA)&PerpendicularBetweenLine(AC,DC)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_alternate_interior_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,CD)&Line(AD)",
            "conclusion": "Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))"
        }
    },
    "44": {
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BA,CA)&PerpendicularBetweenLine(AC,DC)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallel_property_ipsilateral_internal_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,CD)&Line(AC)",
            "conclusion": "Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)"
        }
    },
    "45": {
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BA,CA)&PerpendicularBetweenLine(AC,DC)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "midsegment_of_triangle_judgment_parallel(DE,ABC)": {
            "premise": "Polygon(ECD)&Collinear(EAC)&Collinear(EBD)&Line(AB)&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(EA),LengthOfLine(CA))",
            "conclusion": "IsMidsegmentOfTriangle(AB,ECD)"
        }
    },
    "46": {
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BA,CA)&PerpendicularBetweenLine(AC,DC)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "midsegment_of_quadrilateral_judgment_parallel(EF,ABCD)": {
            "premise": "Collinear(EAC)&Collinear(FBD)&Line(AB)&Trapezoid(ABCD&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(EA),LengthOfLine(CA))",
            "conclusion": "IsMidsegmentOfQuadrilateral(AB,ECDF)"
        }
    },
    "47": {
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BA,CA)&PerpendicularBetweenLine(AC,DC)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ACDB)&ParallelBetweenLine(AB,CD)&ParallelBetweenLine(CA,DB)",
            "conclusion": "Parallelogram(ACDB)"
        }
    },
    "48": {
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BA,CA)&PerpendicularBetweenLine(AC,DC)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(BACD)&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "Parallelogram(BACD)"
        }
    },
    "49": {
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BA,CA)&PerpendicularBetweenLine(AC,DC)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        },
        "trapezoid_judgment_parallel(ABCD)": {
            "premise": "Polygon(ACDB)&ParallelBetweenLine(AB,CD)&~ParallelBetweenLine(CA,DB)",
            "conclusion": "Trapezoid(ACDB)"
        }
    },
    "50": {
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        },
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(MA,CD)&ParallelBetweenLine(CD,EF)",
            "conclusion": "ParallelBetweenLine(MA,EF)"
        }
    },
    "51": {
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        },
        "parallel_property_corresponding_angle(AB,CD,E)": {
            "premise": "ParallelBetweenLine(MA,CD)&Collinear(EMC)",
            "conclusion": "Equal(MeasureOfAngle(EMA),MeasureOfAngle(MCD))"
        }
    },
    "52": {
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        },
        "parallel_property_alternate_interior_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(MA,CD)&Line(MD)",
            "conclusion": "Equal(MeasureOfAngle(AMD),MeasureOfAngle(CDM))"
        }
    },
    "53": {
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        },
        "parallel_property_ipsilateral_internal_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(MA,CD)&Line(MC)",
            "conclusion": "Equal(Add(MeasureOfAngle(AMC),MeasureOfAngle(MCD)),180)"
        }
    },
    "54": {
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        },
        "midsegment_of_triangle_judgment_parallel(DE,ABC)": {
            "premise": "Polygon(BCD)&Collinear(BMC)&Collinear(BAD)&Line(MA)&ParallelBetweenLine(MA,CD)&Equal(LengthOfLine(BM),LengthOfLine(CM))",
            "conclusion": "IsMidsegmentOfTriangle(MA,BCD)"
        }
    },
    "55": {
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        },
        "midsegment_of_quadrilateral_judgment_parallel(EF,ABCD)": {
            "premise": "Collinear(BMC)&Collinear(EAD)&Line(MA)&Trapezoid(ABCD&ParallelBetweenLine(MA,CD)&Equal(LengthOfLine(BM),LengthOfLine(CM))",
            "conclusion": "IsMidsegmentOfQuadrilateral(MA,BCDE)"
        }
    },
    "56": {
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        },
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(MCDA)&ParallelBetweenLine(MA,CD)&ParallelBetweenLine(CM,DA)",
            "conclusion": "Parallelogram(MCDA)"
        }
    },
    "57": {
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(AMCD)&ParallelBetweenLine(MA,CD)&Equal(LengthOfLine(MA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(AMCD)"
        }
    },
    "58": {
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(MAB)",
            "conclusion": "ParallelBetweenLine(MA,CD)"
        },
        "trapezoid_judgment_parallel(ABCD)": {
            "premise": "Polygon(MCDA)&ParallelBetweenLine(MA,CD)&~ParallelBetweenLine(CM,DA)",
            "conclusion": "Trapezoid(MCDA)"
        }
    },
    "59": {
        "parallel_property_corresponding_angle(AB,CD,E)": {
            "premise": "ParallelBetweenLine(AB,CD)&Collinear(EAC)",
            "conclusion": "Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))"
        },
        "parallel_judgment_corresponding_angle(AB,CD,E)": {
            "premise": "Angle(EAB)&Angle(ACD)&Collinear(EAC)&Equal(MeasureOfAngle(EAB),MeasureOfAngle(ACD))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        }
    },
    "60": {
        "parallel_property_alternate_interior_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,CD)&Line(AD)",
            "conclusion": "Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))"
        },
        "parallel_judgment_alternate_interior_angle(AB,CD)": {
            "premise": "Angle(BAD)&Angle(CDA)&Equal(MeasureOfAngle(BAD),MeasureOfAngle(CDA))",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        }
    },
    "61": {
        "parallel_property_ipsilateral_internal_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(AB,CD)&Line(AC)",
            "conclusion": "Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)"
        },
        "parallel_judgment_ipsilateral_internal_angle(AB,CD)": {
            "premise": "Angle(BAC)&Angle(ACD)&Equal(Add(MeasureOfAngle(BAC),MeasureOfAngle(ACD)),180)",
            "conclusion": "ParallelBetweenLine(AB,CD)"
        }
    },
    "62": {
        "perpendicular_judgment_angle(AO,CO)": {
            "premise": "Angle(AOC)&Equal(MeasureOfAngle(AOC),90)",
            "conclusion": "PerpendicularBetweenLine(AO,CO)"
        },
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(AO,CO)&PerpendicularBetweenLine(OC,DC)",
            "conclusion": "ParallelBetweenLine(OA,CD)"
        }
    },
    "63": {
        "perpendicular_bisector_judgment_per_and_mid(CO,AB)": {
            "premise": "Collinear(AOB)&Angle(AOC)&Equal(MeasureOfAngle(AOC),90)&Equal(LengthOfLine(AO),LengthOfLine(BO))",
            "conclusion": "IsPerpendicularBisectorOfLine(CO,AB)"
        },
        "perpendicular_bisector_property_distance_equal(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(CO,AB)",
            "conclusion": "Equal(LengthOfLine(CA),LengthOfLine(CB))"
        }
    },
    "64": {
        "perpendicular_bisector_judgment_per_and_mid(CO,AB)": {
            "premise": "Collinear(AOB)&Angle(AOC)&Equal(MeasureOfAngle(AOC),90)&Equal(LengthOfLine(AO),LengthOfLine(BO))",
            "conclusion": "IsPerpendicularBisectorOfLine(CO,AB)"
        },
        "perpendicular_bisector_property_bisector(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(CO,AB)&Angle(BCO)&Angle(OCA)",
            "conclusion": "IsBisectorOfAngle(CO,BCA)"
        }
    },
    "65": {
        "perpendicular_bisector_judgment_distance_equal(CO,AB)": {
            "premise": "Collinear(AOB)&Angle(AOC)&Equal(MeasureOfAngle(AOC),90)&Equal(LengthOfLine(CA),LengthOfLine(CB))",
            "conclusion": "IsPerpendicularBisectorOfLine(CO,AB)"
        },
        "perpendicular_bisector_property_distance_equal(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(CO,AB)",
            "conclusion": "Equal(LengthOfLine(CA),LengthOfLine(CB))"
        }
    },
    "66": {
        "perpendicular_bisector_judgment_distance_equal(CO,AB)": {
            "premise": "Collinear(AOB)&Angle(AOC)&Equal(MeasureOfAngle(AOC),90)&Equal(LengthOfLine(CA),LengthOfLine(CB))",
            "conclusion": "IsPerpendicularBisectorOfLine(CO,AB)"
        },
        "perpendicular_bisector_property_bisector(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(CO,AB)&Angle(BCO)&Angle(OCA)",
            "conclusion": "IsBisectorOfAngle(CO,BCA)"
        }
    },
    "67": {
        "perpendicular_bisector_property_distance_equal(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(CO,AB)",
            "conclusion": "Equal(LengthOfLine(CA),LengthOfLine(CB))"
        },
        "perpendicular_bisector_judgment_distance_equal(CO,AB)": {
            "premise": "Collinear(AOB)&Angle(AOC)&Equal(MeasureOfAngle(AOC),90)&Equal(LengthOfLine(CA),LengthOfLine(CB))",
            "conclusion": "IsPerpendicularBisectorOfLine(CO,AB)"
        }
    },
    "68": {
        "perpendicular_bisector_property_distance_equal(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(CO,AB)",
            "conclusion": "Equal(LengthOfLine(CA),LengthOfLine(CB))"
        },
        "isosceles_triangle_judgment_line_equal(ABC)": {
            "premise": "Polygon(CAB)&Equal(LengthOfLine(CA),LengthOfLine(CB))",
            "conclusion": "IsoscelesTriangle(CAB)"
        }
    },
    "69": {
        "perpendicular_bisector_property_distance_equal(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(CO,AB)",
            "conclusion": "Equal(LengthOfLine(CA),LengthOfLine(CB))"
        },
        "kite_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(CADB)&Equal(LengthOfLine(CA),LengthOfLine(CB))&Equal(LengthOfLine(DA),LengthOfLine(DB))",
            "conclusion": "Kite(CADB)"
        }
    },
    "70": {
        "perpendicular_bisector_property_bisector(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(CO,AB)&Angle(BCO)&Angle(OCA)",
            "conclusion": "IsBisectorOfAngle(CO,BCA)"
        },
        "bisector_of_angle_property_distance_equal(BD,ABC)": {
            "premise": "IsBisectorOfAngle(CO,BCA)&Equal(MeasureOfAngle(CAO),90)&Equal(MeasureOfAngle(OBC),90)",
            "conclusion": "Equal(LengthOfLine(OB),LengthOfLine(OA))"
        }
    },
    "71": {
        "perpendicular_bisector_property_bisector(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(CO,AB)&Angle(BCO)&Angle(OCA)",
            "conclusion": "IsBisectorOfAngle(CO,BCA)"
        },
        "bisector_of_angle_property_line_ratio(BD,ABC)": {
            "premise": "IsBisectorOfAngle(CO,BCA)&Collinear(AOB)",
            "conclusion": "Equal(Mul(LengthOfLine(AO),LengthOfLine(CB)),Mul(LengthOfLine(OB),LengthOfLine(CA)))"
        }
    },
    "72": {
        "perpendicular_bisector_property_bisector(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(CO,AB)&Angle(BCO)&Angle(OCA)",
            "conclusion": "IsBisectorOfAngle(CO,BCA)"
        },
        "incenter_of_triangle_judgment_intersection(O,ABC)": {
            "premise": "Polygon(BCA)&IsBisectorOfAngle(CO,BCA)&IsBisectorOfAngle(AO,CAB)",
            "conclusion": "IsIncenterOfTriangle(O,BCA)"
        }
    },
    "73": {
        "bisector_of_angle_judgment_angle_equal(BD,ABC)": {
            "premise": "Angle(ABD)&Angle(DBC)&Equal(MeasureOfAngle(ABD),MeasureOfAngle(DBC))",
            "conclusion": "IsBisectorOfAngle(BD,ABC)"
        },
        "bisector_of_angle_property_distance_equal(BD,ABC)": {
            "premise": "IsBisectorOfAngle(BD,ABC)&Equal(MeasureOfAngle(BCD),90)&Equal(MeasureOfAngle(DAB),90)",
            "conclusion": "Equal(LengthOfLine(DA),LengthOfLine(DC))"
        }
    },
    "74": {
        "bisector_of_angle_judgment_angle_equal(BD,ABC)": {
            "premise": "Angle(ABD)&Angle(DBC)&Equal(MeasureOfAngle(ABD),MeasureOfAngle(DBC))",
            "conclusion": "IsBisectorOfAngle(BD,ABC)"
        },
        "bisector_of_angle_property_line_ratio(BD,ABC)": {
            "premise": "IsBisectorOfAngle(BD,ABC)&Collinear(CDA)",
            "conclusion": "Equal(Mul(LengthOfLine(CD),LengthOfLine(BA)),Mul(LengthOfLine(DA),LengthOfLine(BC)))"
        }
    },
    "75": {
        "bisector_of_angle_judgment_angle_equal(BD,ABC)": {
            "premise": "Angle(ABD)&Angle(DBC)&Equal(MeasureOfAngle(ABD),MeasureOfAngle(DBC))",
            "conclusion": "IsBisectorOfAngle(BD,ABC)"
        },
        "incenter_of_triangle_judgment_intersection(O,ABC)": {
            "premise": "Polygon(ABC)&IsBisectorOfAngle(BD,ABC)&IsBisectorOfAngle(CD,BCA)",
            "conclusion": "IsIncenterOfTriangle(D,ABC)"
        }
    },
    "76": {
        "bisector_of_angle_property_distance_equal(BD,ABC)": {
            "premise": "IsBisectorOfAngle(BD,ABC)&Equal(MeasureOfAngle(BCD),90)&Equal(MeasureOfAngle(DAB),90)",
            "conclusion": "Equal(LengthOfLine(DA),LengthOfLine(DC))"
        },
        "perpendicular_bisector_judgment_distance_equal(CO,AB)": {
            "premise": "Collinear(AOC)&Angle(AOD)&Equal(MeasureOfAngle(AOD),90)&Equal(LengthOfLine(DA),LengthOfLine(DC))",
            "conclusion": "IsPerpendicularBisectorOfLine(DO,AC)"
        }
    },
    "77": {
        "bisector_of_angle_property_distance_equal(BD,ABC)": {
            "premise": "IsBisectorOfAngle(BD,ABC)&Equal(MeasureOfAngle(BCD),90)&Equal(MeasureOfAngle(DAB),90)",
            "conclusion": "Equal(LengthOfLine(DA),LengthOfLine(DC))"
        },
        "isosceles_triangle_judgment_line_equal(ABC)": {
            "premise": "Polygon(DAC)&Equal(LengthOfLine(DA),LengthOfLine(DC))",
            "conclusion": "IsoscelesTriangle(DAC)"
        }
    },
    "78": {
        "bisector_of_angle_property_distance_equal(BD,ABC)": {
            "premise": "IsBisectorOfAngle(BD,ABC)&Equal(MeasureOfAngle(BCD),90)&Equal(MeasureOfAngle(DAB),90)",
            "conclusion": "Equal(LengthOfLine(DA),LengthOfLine(DC))"
        },
        "kite_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(DABC)&Equal(LengthOfLine(DA),LengthOfLine(DC))&Equal(LengthOfLine(BA),LengthOfLine(BC))",
            "conclusion": "Kite(DABC)"
        }
    },
    "79": {
        "median_of_triangle_judgment(AD,ABC)": {
            "premise": "Polygon(ABC)&Line(AD)&Collinear(BDC)&Equal(LengthOfLine(BD),LengthOfLine(CD))",
            "conclusion": "IsMedianOfTriangle(AD,ABC)"
        },
        "centroid_of_triangle_judgment_intersection(O,ABC,M,N)": {
            "premise": "IsMedianOfTriangle(AD,ABC)&IsMedianOfTriangle(CN,CAB)&Collinear(AOD)&Collinear(CON)",
            "conclusion": "IsCentroidOfTriangle(O,BCA)"
        }
    },
    "80": {
        "median_of_triangle_judgment(AD,ABC)": {
            "premise": "Polygon(ABC)&Line(AD)&Collinear(BDC)&Equal(LengthOfLine(BD),LengthOfLine(CD))",
            "conclusion": "IsMedianOfTriangle(AD,ABC)"
        },
        "right_triangle_property_length_of_median(ABC,M)": {
            "premise": "RightTriangle(CAB)&IsMedianOfTriangle(AD,ABC)",
            "conclusion": "Equal(Mul(LengthOfLine(AD),2),LengthOfLine(BC))"
        }
    },
    "81": {
        "altitude_of_triangle_judgment(AD,ABC)": {
            "premise": "Polygon(ABC)&Line(AD)&Collinear(BDC)&Equal(MeasureOfAngle(BDA),90)",
            "conclusion": "IsAltitudeOfTriangle(AD,ABC)"
        },
        "orthocenter_of_triangle_judgment_intersection(O,ABC,D,E)": {
            "premise": "IsAltitudeOfTriangle(AD,ABC)&IsAltitudeOfTriangle(CE,CAB)&Collinear(AOD)&Collinear(COE)",
            "conclusion": "IsOrthocenterOfTriangle(O,BCA)"
        }
    },
    "82": {
        "altitude_of_triangle_judgment(AD,ABC)": {
            "premise": "Polygon(ABC)&Line(AD)&Collinear(BDC)&Equal(MeasureOfAngle(BDA),90)",
            "conclusion": "IsAltitudeOfTriangle(AD,ABC)"
        },
        "isosceles_triangle_property_line_coincidence(ABC,M)": {
            "premise": "IsoscelesTriangle(ABC)&IsAltitudeOfTriangle(AD,ABC)",
            "conclusion": "IsMedianOfTriangle(AD,ABC)"
        }
    },
    "83": {
        "midsegment_of_triangle_judgment_midpoint(DE,ABC)": {
            "premise": "Polygon(ABC)&Collinear(ADB)&Collinear(AEC)&Line(DE)&Equal(LengthOfLine(AD),LengthOfLine(BD))&Equal(LengthOfLine(AE),LengthOfLine(CE))",
            "conclusion": "IsMidsegmentOfTriangle(DE,ABC)"
        },
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        }
    },
    "84": {
        "midsegment_of_triangle_judgment_midpoint(DE,ABC)": {
            "premise": "Polygon(ABC)&Collinear(ADB)&Collinear(AEC)&Line(DE)&Equal(LengthOfLine(AD),LengthOfLine(BD))&Equal(LengthOfLine(AE),LengthOfLine(CE))",
            "conclusion": "IsMidsegmentOfTriangle(DE,ABC)"
        },
        "midsegment_of_triangle_property_length(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "Equal(LengthOfLine(DE),Mul(LengthOfLine(BC),1/2))"
        }
    },
    "85": {
        "midsegment_of_triangle_judgment_parallel(DE,ABC)": {
            "premise": "Polygon(ABC)&Collinear(ADB)&Collinear(AEC)&Line(DE)&ParallelBetweenLine(DE,BC)&Equal(LengthOfLine(AD),LengthOfLine(BD))",
            "conclusion": "IsMidsegmentOfTriangle(DE,ABC)"
        },
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        }
    },
    "86": {
        "midsegment_of_triangle_judgment_parallel(DE,ABC)": {
            "premise": "Polygon(ABC)&Collinear(ADB)&Collinear(AEC)&Line(DE)&ParallelBetweenLine(DE,BC)&Equal(LengthOfLine(AD),LengthOfLine(BD))",
            "conclusion": "IsMidsegmentOfTriangle(DE,ABC)"
        },
        "midsegment_of_triangle_property_length(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "Equal(LengthOfLine(DE),Mul(LengthOfLine(BC),1/2))"
        }
    },
    "87": {
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        },
        "parallel_judgment_par_par(AB,CD,EF)": {
            "premise": "ParallelBetweenLine(DE,BC)&ParallelBetweenLine(BC,AF)",
            "conclusion": "ParallelBetweenLine(DE,AF)"
        }
    },
    "88": {
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        },
        "parallel_property_collinear_extend(AB,CD,M)": {
            "premise": "ParallelBetweenLine(DE,BC)&Collinear(MDE)",
            "conclusion": "ParallelBetweenLine(MD,BC)"
        }
    },
    "89": {
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        },
        "parallel_property_corresponding_angle(AB,CD,E)": {
            "premise": "ParallelBetweenLine(DE,BC)&Collinear(ADB)",
            "conclusion": "Equal(MeasureOfAngle(ADE),MeasureOfAngle(DBC))"
        }
    },
    "90": {
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        },
        "parallel_property_alternate_interior_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(DE,BC)&Line(DC)",
            "conclusion": "Equal(MeasureOfAngle(EDC),MeasureOfAngle(BCD))"
        }
    },
    "91": {
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        },
        "parallel_property_ipsilateral_internal_angle(AB,CD)": {
            "premise": "ParallelBetweenLine(DE,BC)&Line(DB)",
            "conclusion": "Equal(Add(MeasureOfAngle(EDB),MeasureOfAngle(DBC)),180)"
        }
    },
    "92": {
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        },
        "midsegment_of_triangle_judgment_parallel(DE,ABC)": {
            "premise": "Polygon(ABC)&Collinear(ADB)&Collinear(AEC)&Line(DE)&ParallelBetweenLine(DE,BC)&Equal(LengthOfLine(AD),LengthOfLine(BD))",
            "conclusion": "IsMidsegmentOfTriangle(DE,ABC)"
        }
    },
    "93": {
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        },
        "midsegment_of_quadrilateral_judgment_parallel(EF,ABCD)": {
            "premise": "Collinear(ADB)&Collinear(FEC)&Line(DE)&Trapezoid(ABCD&ParallelBetweenLine(DE,BC)&Equal(LengthOfLine(AD),LengthOfLine(BD))",
            "conclusion": "IsMidsegmentOfQuadrilateral(DE,ABCF)"
        }
    },
    "94": {
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        },
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(DBCE)&ParallelBetweenLine(DE,BC)&ParallelBetweenLine(BD,CE)",
            "conclusion": "Parallelogram(DBCE)"
        }
    },
    "95": {
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(EDBC)&ParallelBetweenLine(DE,BC)&Equal(LengthOfLine(DE),LengthOfLine(BC))",
            "conclusion": "Parallelogram(EDBC)"
        }
    },
    "96": {
        "midsegment_of_triangle_property_parallel(DE,ABC)": {
            "premise": "IsMidsegmentOfTriangle(DE,ABC)",
            "conclusion": "ParallelBetweenLine(DE,BC)"
        },
        "trapezoid_judgment_parallel(ABCD)": {
            "premise": "Polygon(DBCE)&ParallelBetweenLine(DE,BC)&~ParallelBetweenLine(BD,CE)",
            "conclusion": "Trapezoid(DBCE)"
        }
    },
    "97": {
        "centroid_of_triangle_judgment_intersection(O,ABC,M,N)": {
            "premise": "IsMedianOfTriangle(CM,CAB)&IsMedianOfTriangle(BN,BCA)&Collinear(COM)&Collinear(BON)",
            "conclusion": "IsCentroidOfTriangle(O,ABC)"
        },
        "centroid_of_triangle_property_intersection(O,ABC,M)": {
            "premise": "IsCentroidOfTriangle(O,ABC)&Collinear(AOM)&Collinear(BMC)",
            "conclusion": "IsMedianOfTriangle(AM,ABC)"
        }
    },
    "98": {
        "centroid_of_triangle_judgment_intersection(O,ABC,M,N)": {
            "premise": "IsMedianOfTriangle(CM,CAB)&IsMedianOfTriangle(BN,BCA)&Collinear(COM)&Collinear(BON)",
            "conclusion": "IsCentroidOfTriangle(O,ABC)"
        },
        "centroid_of_triangle_property_line_ratio(O,ABC,M)": {
            "premise": "IsCentroidOfTriangle(O,ABC)&Collinear(AOM)&Collinear(BMC)",
            "conclusion": "Equal(LengthOfLine(OA),Mul(LengthOfLine(OM),2))"
        }
    },
    "99": {
        "centroid_of_triangle_property_intersection(O,ABC,M)": {
            "premise": "IsCentroidOfTriangle(O,ABC)&Collinear(AOM)&Collinear(BMC)",
            "conclusion": "IsMedianOfTriangle(AM,ABC)"
        },
        "centroid_of_triangle_judgment_intersection(O,ABC,M,N)": {
            "premise": "IsMedianOfTriangle(AM,ABC)&IsMedianOfTriangle(CN,CAB)&Collinear(AOM)&Collinear(CON)",
            "conclusion": "IsCentroidOfTriangle(O,BCA)"
        }
    },
    "100": {
        "centroid_of_triangle_property_intersection(O,ABC,M)": {
            "premise": "IsCentroidOfTriangle(O,ABC)&Collinear(AOM)&Collinear(BMC)",
            "conclusion": "IsMedianOfTriangle(AM,ABC)"
        },
        "right_triangle_property_length_of_median(ABC,M)": {
            "premise": "RightTriangle(CAB)&IsMedianOfTriangle(AM,ABC)",
            "conclusion": "Equal(Mul(LengthOfLine(AM),2),LengthOfLine(BC))"
        }
    },
    "101": {
        "orthocenter_of_triangle_judgment_intersection(O,ABC,D,E)": {
            "premise": "IsAltitudeOfTriangle(CD,CAB)&IsAltitudeOfTriangle(BE,BCA)&Collinear(COD)&Collinear(BOE)",
            "conclusion": "IsOrthocenterOfTriangle(O,ABC)"
        },
        "orthocenter_of_triangle_property_intersection(O,ABC,D)": {
            "premise": "IsOrthocenterOfTriangle(O,ABC)&Collinear(AOD)&Collinear(BDC)",
            "conclusion": "IsAltitudeOfTriangle(AD,ABC)"
        }
    },
    "102": {
        "orthocenter_of_triangle_property_intersection(O,ABC,D)": {
            "premise": "IsOrthocenterOfTriangle(O,ABC)&Collinear(AOD)&Collinear(BDC)",
            "conclusion": "IsAltitudeOfTriangle(AD,ABC)"
        },
        "orthocenter_of_triangle_judgment_intersection(O,ABC,D,E)": {
            "premise": "IsAltitudeOfTriangle(AD,ABC)&IsAltitudeOfTriangle(CE,CAB)&Collinear(AOD)&Collinear(COE)",
            "conclusion": "IsOrthocenterOfTriangle(O,BCA)"
        }
    },
    "103": {
        "orthocenter_of_triangle_property_intersection(O,ABC,D)": {
            "premise": "IsOrthocenterOfTriangle(O,ABC)&Collinear(AOD)&Collinear(BDC)",
            "conclusion": "IsAltitudeOfTriangle(AD,ABC)"
        },
        "isosceles_triangle_property_line_coincidence(ABC,M)": {
            "premise": "IsoscelesTriangle(ABC)&IsAltitudeOfTriangle(AD,ABC)",
            "conclusion": "IsMedianOfTriangle(AD,ABC)"
        }
    },
    "104": {
        "congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DE))&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(CA),LengthOfLine(FD))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        },
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        }
    },
    "105": {
        "congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DE))&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(CA),LengthOfLine(FD))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        },
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "106": {
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DE))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DF))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        },
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        }
    },
    "107": {
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DE))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DF))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        },
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "108": {
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(EFD))&Equal(LengthOfLine(AB),LengthOfLine(DE))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        },
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        }
    },
    "109": {
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(EFD))&Equal(LengthOfLine(AB),LengthOfLine(DE))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        },
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "110": {
        "congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),90)&Equal(MeasureOfAngle(DEF),90)&Equal(LengthOfLine(AC),LengthOfLine(DF))&(Equal(LengthOfLine(AB),LengthOfLine(DE))|Equal(LengthOfLine(BC),LengthOfLine(EF)))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        },
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        }
    },
    "111": {
        "congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),90)&Equal(MeasureOfAngle(DEF),90)&Equal(LengthOfLine(AC),LengthOfLine(DF))&(Equal(LengthOfLine(AB),LengthOfLine(DE))|Equal(LengthOfLine(BC),LengthOfLine(EF)))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        },
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "112": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(EFA)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(CD),LengthOfLine(FA))&Equal(LengthOfLine(DB),LengthOfLine(AE))",
            "conclusion": "CongruentBetweenTriangle(BCD,EFA)"
        }
    },
    "113": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(EFA)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(MeasureOfAngle(DBC),MeasureOfAngle(AEF))&Equal(LengthOfLine(BD),LengthOfLine(EA))",
            "conclusion": "CongruentBetweenTriangle(BCD,EFA)"
        }
    },
    "114": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(EFA)&Equal(MeasureOfAngle(BCD),MeasureOfAngle(EFA))&Equal(MeasureOfAngle(CDB),MeasureOfAngle(FAE))&Equal(LengthOfLine(BC),LengthOfLine(EF))",
            "conclusion": "CongruentBetweenTriangle(BCD,EFA)"
        }
    },
    "115": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(BDC)&Polygon(EAF)&Equal(MeasureOfAngle(BDC),90)&Equal(MeasureOfAngle(EAF),90)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(BD),LengthOfLine(EA)",
            "conclusion": "CongruentBetweenTriangle(BDC,EAF)"
        }
    },
    "116": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(BCA)&Polygon(FDE)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(CA),LengthOfLine(DE))&Equal(LengthOfLine(AB),LengthOfLine(FD))",
            "conclusion": "MirrorCongruentBetweenTriangle(BCA,FDE)"
        }
    },
    "117": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(EAF)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(MeasureOfAngle(DBC),MeasureOfAngle(FEA))&Equal(LengthOfLine(BD),LengthOfLine(EA))",
            "conclusion": "MirrorCongruentBetweenTriangle(BCD,EAF)"
        }
    },
    "118": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(EAF)&Equal(MeasureOfAngle(BCD),MeasureOfAngle(AFE))&Equal(MeasureOfAngle(CDB),MeasureOfAngle(EAF))&Equal(LengthOfLine(BC),LengthOfLine(EF))",
            "conclusion": "MirrorCongruentBetweenTriangle(BCD,EAF)"
        }
    },
    "119": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(BDC)&Polygon(EFA)&Equal(MeasureOfAngle(BDC),90)&Equal(MeasureOfAngle(FAE),90)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(DC),LengthOfLine(FA)",
            "conclusion": "MirrorCongruentBetweenTriangle(BDC,EFA)"
        }
    },
    "120": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(CBEF)&ParallelBetweenLine(BC,EF)&Equal(LengthOfLine(BC),LengthOfLine(EF))",
            "conclusion": "Parallelogram(CBEF)"
        }
    },
    "121": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(BEFC)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(EB),LengthOfLine(FC))",
            "conclusion": "Parallelogram(BEFC)"
        }
    },
    "122": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(BCEF)&Equal(LengthOfLine(BC),LengthOfLine(EF))",
            "conclusion": "IsoscelesTrapezoid(BCEF)"
        }
    },
    "123": {
        "congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XBC)&Arc(YEF)&Cocircular(X,EF)&Line(BC)&Line(EF)&Equal(LengthOfLine(BC),LengthOfLine(EF))",
            "conclusion": "CongruentBetweenArc(XBC,YEF)"
        }
    },
    "124": {
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DE))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DF))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        }
    },
    "125": {
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(FDE)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))&Equal(LengthOfLine(CA),LengthOfLine(FD))",
            "conclusion": "CongruentBetweenTriangle(CAB,FDE)"
        }
    },
    "126": {
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DF))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        }
    },
    "127": {
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(EFD)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))&Equal(LengthOfLine(CA),LengthOfLine(ED))",
            "conclusion": "MirrorCongruentBetweenTriangle(CAB,EFD)"
        }
    },
    "128": {
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DF)),Mul(LengthOfLine(DE),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        }
    },
    "129": {
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(FDE)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))",
            "conclusion": "SimilarBetweenTriangle(CAB,FDE)"
        }
    },
    "130": {
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        }
    },
    "131": {
        "congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "CongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(EFD)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))",
            "conclusion": "MirrorSimilarBetweenTriangle(CAB,EFD)"
        }
    },
    "132": {
        "mirror_congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(FD))&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(CA),LengthOfLine(DE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        },
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        }
    },
    "133": {
        "mirror_congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(FD))&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(CA),LengthOfLine(DE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        },
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "134": {
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DF))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        },
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        }
    },
    "135": {
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DF))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        },
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "136": {
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(DEF))&Equal(LengthOfLine(AB),LengthOfLine(DF))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        },
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        }
    },
    "137": {
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(DEF))&Equal(LengthOfLine(AB),LengthOfLine(DF))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        },
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "138": {
        "mirror_congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),90)&Equal(MeasureOfAngle(EFD),90)&Equal(LengthOfLine(AC),LengthOfLine(DE))&(Equal(LengthOfLine(BC),LengthOfLine(EF))|Equal(LengthOfLine(AB),LengthOfLine(DF)))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        },
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        }
    },
    "139": {
        "mirror_congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),90)&Equal(MeasureOfAngle(EFD),90)&Equal(LengthOfLine(AC),LengthOfLine(DE))&(Equal(LengthOfLine(BC),LengthOfLine(EF))|Equal(LengthOfLine(AB),LengthOfLine(DF)))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        },
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "140": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(EFA)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(CD),LengthOfLine(FA))&Equal(LengthOfLine(DB),LengthOfLine(AE))",
            "conclusion": "CongruentBetweenTriangle(BCD,EFA)"
        }
    },
    "141": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(EFA)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(MeasureOfAngle(DBC),MeasureOfAngle(AEF))&Equal(LengthOfLine(BD),LengthOfLine(EA))",
            "conclusion": "CongruentBetweenTriangle(BCD,EFA)"
        }
    },
    "142": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(EFA)&Equal(MeasureOfAngle(BCD),MeasureOfAngle(EFA))&Equal(MeasureOfAngle(CDB),MeasureOfAngle(FAE))&Equal(LengthOfLine(BC),LengthOfLine(EF))",
            "conclusion": "CongruentBetweenTriangle(BCD,EFA)"
        }
    },
    "143": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(BAC)&Polygon(EDF)&Equal(MeasureOfAngle(BAC),90)&Equal(MeasureOfAngle(EDF),90)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(BA),LengthOfLine(ED)",
            "conclusion": "CongruentBetweenTriangle(BAC,EDF)"
        }
    },
    "144": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(FAE)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(CD),LengthOfLine(AE))&Equal(LengthOfLine(DB),LengthOfLine(FA))",
            "conclusion": "MirrorCongruentBetweenTriangle(BCD,FAE)"
        }
    },
    "145": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(EAF)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(MeasureOfAngle(DBC),MeasureOfAngle(FEA))&Equal(LengthOfLine(BD),LengthOfLine(EA))",
            "conclusion": "MirrorCongruentBetweenTriangle(BCD,EAF)"
        }
    },
    "146": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(BCD)&Polygon(EAF)&Equal(MeasureOfAngle(BCD),MeasureOfAngle(AFE))&Equal(MeasureOfAngle(CDB),MeasureOfAngle(EAF))&Equal(LengthOfLine(BC),LengthOfLine(EF))",
            "conclusion": "MirrorCongruentBetweenTriangle(BCD,EAF)"
        }
    },
    "147": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(BAC)&Polygon(EFD)&Equal(MeasureOfAngle(BAC),90)&Equal(MeasureOfAngle(FDE),90)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(AC),LengthOfLine(FD)",
            "conclusion": "MirrorCongruentBetweenTriangle(BAC,EFD)"
        }
    },
    "148": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(CBEF)&ParallelBetweenLine(BC,EF)&Equal(LengthOfLine(BC),LengthOfLine(EF))",
            "conclusion": "Parallelogram(CBEF)"
        }
    },
    "149": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(BEFC)&Equal(LengthOfLine(BC),LengthOfLine(EF))&Equal(LengthOfLine(EB),LengthOfLine(FC))",
            "conclusion": "Parallelogram(BEFC)"
        }
    },
    "150": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(BCEF)&Equal(LengthOfLine(BC),LengthOfLine(EF))",
            "conclusion": "IsoscelesTrapezoid(BCEF)"
        }
    },
    "151": {
        "mirror_congruent_triangle_property_line_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),LengthOfLine(EF))"
        },
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XBC)&Arc(YEF)&Cocircular(X,EF)&Line(BC)&Line(EF)&Equal(LengthOfLine(BC),LengthOfLine(EF))",
            "conclusion": "CongruentBetweenArc(XBC,YEF)"
        }
    },
    "152": {
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DE))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DF))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        }
    },
    "153": {
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(FDE)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))&Equal(LengthOfLine(CA),LengthOfLine(FD))",
            "conclusion": "CongruentBetweenTriangle(CAB,FDE)"
        }
    },
    "154": {
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DF))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        }
    },
    "155": {
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(EFD)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))&Equal(LengthOfLine(CA),LengthOfLine(ED))",
            "conclusion": "MirrorCongruentBetweenTriangle(CAB,EFD)"
        }
    },
    "156": {
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DF)),Mul(LengthOfLine(DE),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        }
    },
    "157": {
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(FDE)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))",
            "conclusion": "SimilarBetweenTriangle(CAB,FDE)"
        }
    },
    "158": {
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        }
    },
    "159": {
        "mirror_congruent_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorCongruentBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(EFD)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))",
            "conclusion": "MirrorSimilarBetweenTriangle(CAB,EFD)"
        }
    },
    "160": {
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DF)),Mul(LengthOfLine(DE),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        },
        "similar_triangle_property_line_ratio(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),Mul(LengthOfLine(EF),RatioOfSimilarTriangle(ABC,DEF)))"
        }
    },
    "161": {
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DF)),Mul(LengthOfLine(DE),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        },
        "similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "162": {
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DF)),Mul(LengthOfLine(DE),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        },
        "similar_triangle_property_perimeter_ratio(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(PerimeterOfTriangle(ABC),Mul(PerimeterOfTriangle(DEF),RatioOfSimilarTriangle(ABC,DEF)))"
        }
    },
    "163": {
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DF)),Mul(LengthOfLine(DE),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        },
        "similar_triangle_property_area_square_ratio(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(AreaOfTriangle(ABC),Mul(AreaOfTriangle(DEF),RatioOfSimilarTriangle(ABC,DEF),RatioOfSimilarTriangle(ABC,DEF)))"
        }
    },
    "164": {
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(EFD))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        },
        "similar_triangle_property_line_ratio(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),Mul(LengthOfLine(EF),RatioOfSimilarTriangle(ABC,DEF)))"
        }
    },
    "165": {
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(EFD))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        },
        "similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "166": {
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(EFD))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        },
        "similar_triangle_property_perimeter_ratio(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(PerimeterOfTriangle(ABC),Mul(PerimeterOfTriangle(DEF),RatioOfSimilarTriangle(ABC,DEF)))"
        }
    },
    "167": {
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(EFD))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        },
        "similar_triangle_property_area_square_ratio(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(AreaOfTriangle(ABC),Mul(AreaOfTriangle(DEF),RatioOfSimilarTriangle(ABC,DEF),RatioOfSimilarTriangle(ABC,DEF)))"
        }
    },
    "168": {
        "similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DE))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DF))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        }
    },
    "169": {
        "similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(FDE)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))&Equal(LengthOfLine(CA),LengthOfLine(FD))",
            "conclusion": "CongruentBetweenTriangle(CAB,FDE)"
        }
    },
    "170": {
        "similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DF))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        }
    },
    "171": {
        "similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(EFD)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))&Equal(LengthOfLine(CA),LengthOfLine(ED))",
            "conclusion": "MirrorCongruentBetweenTriangle(CAB,EFD)"
        }
    },
    "172": {
        "similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DF)),Mul(LengthOfLine(DE),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        }
    },
    "173": {
        "similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(FDE)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))",
            "conclusion": "SimilarBetweenTriangle(CAB,FDE)"
        }
    },
    "174": {
        "similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        }
    },
    "175": {
        "similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "SimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(EFD)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))",
            "conclusion": "MirrorSimilarBetweenTriangle(CAB,EFD)"
        }
    },
    "176": {
        "mirror_similar_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EF)),Mul(LengthOfLine(FD),LengthOfLine(BC)))&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(FD),LengthOfLine(CA)))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_line_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),Mul(LengthOfLine(EF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "177": {
        "mirror_similar_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EF)),Mul(LengthOfLine(FD),LengthOfLine(BC)))&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(FD),LengthOfLine(CA)))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "178": {
        "mirror_similar_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EF)),Mul(LengthOfLine(FD),LengthOfLine(BC)))&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(FD),LengthOfLine(CA)))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_perimeter_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(PerimeterOfTriangle(ABC),Mul(PerimeterOfTriangle(DEF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "179": {
        "mirror_similar_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EF)),Mul(LengthOfLine(FD),LengthOfLine(BC)))&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(FD),LengthOfLine(CA)))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_area_square_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(AreaOfTriangle(ABC),Mul(AreaOfTriangle(DEF),RatioOfMirrorSimilarTriangle(ABC,DEF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "180": {
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_line_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),Mul(LengthOfLine(EF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "181": {
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "182": {
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_perimeter_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(PerimeterOfTriangle(ABC),Mul(PerimeterOfTriangle(DEF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "183": {
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_area_square_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(AreaOfTriangle(ABC),Mul(AreaOfTriangle(DEF),RatioOfMirrorSimilarTriangle(ABC,DEF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "184": {
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(DEF))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_line_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),Mul(LengthOfLine(EF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "185": {
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(DEF))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "186": {
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(DEF))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_perimeter_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(PerimeterOfTriangle(ABC),Mul(PerimeterOfTriangle(DEF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "187": {
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(DEF))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_area_square_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(AreaOfTriangle(ABC),Mul(AreaOfTriangle(DEF),RatioOfMirrorSimilarTriangle(ABC,DEF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "188": {
        "mirror_similar_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(BCA)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),90)&Equal(MeasureOfAngle(DEF),90)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_line_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(LengthOfLine(BC),Mul(LengthOfLine(EF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "189": {
        "mirror_similar_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(BCA)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),90)&Equal(MeasureOfAngle(DEF),90)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        }
    },
    "190": {
        "mirror_similar_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(BCA)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),90)&Equal(MeasureOfAngle(DEF),90)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_perimeter_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(PerimeterOfTriangle(ABC),Mul(PerimeterOfTriangle(DEF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "191": {
        "mirror_similar_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(BCA)&Polygon(DEF)&Equal(MeasureOfAngle(ABC),90)&Equal(MeasureOfAngle(DEF),90)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        },
        "mirror_similar_triangle_property_area_square_ratio(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(AreaOfTriangle(ABC),Mul(AreaOfTriangle(DEF),RatioOfMirrorSimilarTriangle(ABC,DEF),RatioOfMirrorSimilarTriangle(ABC,DEF)))"
        }
    },
    "192": {
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DE))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DF))",
            "conclusion": "CongruentBetweenTriangle(ABC,DEF)"
        }
    },
    "193": {
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(FDE)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))&Equal(LengthOfLine(CA),LengthOfLine(FD))",
            "conclusion": "CongruentBetweenTriangle(CAB,FDE)"
        }
    },
    "194": {
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(LengthOfLine(AB),LengthOfLine(DF))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(LengthOfLine(AC),LengthOfLine(DE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,DEF)"
        }
    },
    "195": {
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(EFD)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))&Equal(LengthOfLine(CA),LengthOfLine(ED))",
            "conclusion": "MirrorCongruentBetweenTriangle(CAB,EFD)"
        }
    },
    "196": {
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DF)),Mul(LengthOfLine(DE),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "SimilarBetweenTriangle(ABC,DEF)"
        }
    },
    "197": {
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(FDE)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))",
            "conclusion": "SimilarBetweenTriangle(CAB,FDE)"
        }
    },
    "198": {
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(DEF)&Equal(Mul(LengthOfLine(AB),LengthOfLine(DE)),Mul(LengthOfLine(DF),LengthOfLine(AC)))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABC,DEF)"
        }
    },
    "199": {
        "mirror_similar_triangle_property_angle_equal(ABC,DEF)": {
            "premise": "MirrorSimilarBetweenTriangle(ABC,DEF)",
            "conclusion": "Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))"
        },
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(CAB)&Polygon(EFD)&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FDE))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))",
            "conclusion": "MirrorSimilarBetweenTriangle(CAB,EFD)"
        }
    },
    "200": {
        "right_triangle_judgment_angle(ABC)": {
            "premise": "Polygon(ABC)&Equal(MeasureOfAngle(ABC),90)",
            "conclusion": "RightTriangle(ABC)"
        },
        "right_triangle_property_pythagorean(ABC)": {
            "premise": "RightTriangle(ABC)",
            "conclusion": "Equal(Add(Pow(LengthOfLine(AB),2),Pow(LengthOfLine(BC),2)),Pow(LengthOfLine(AC),2))"
        }
    },
    "201": {
        "right_triangle_judgment_angle(ABC)": {
            "premise": "Polygon(ABC)&Equal(MeasureOfAngle(ABC),90)",
            "conclusion": "RightTriangle(ABC)"
        },
        "right_triangle_property_length_of_median(ABC,M)": {
            "premise": "RightTriangle(ABC)&IsMedianOfTriangle(BM,BCA)",
            "conclusion": "Equal(Mul(LengthOfLine(BM),2),LengthOfLine(CA))"
        }
    },
    "202": {
        "right_triangle_judgment_pythagorean_inverse(ABC)": {
            "premise": "Polygon(ABC)&Equal(Add(Pow(LengthOfLine(AB),2),Pow(LengthOfLine(BC),2)),Pow(LengthOfLine(AC),2))",
            "conclusion": "RightTriangle(ABC)"
        },
        "right_triangle_property_pythagorean(ABC)": {
            "premise": "RightTriangle(ABC)",
            "conclusion": "Equal(Add(Pow(LengthOfLine(AB),2),Pow(LengthOfLine(BC),2)),Pow(LengthOfLine(AC),2))"
        }
    },
    "203": {
        "right_triangle_judgment_pythagorean_inverse(ABC)": {
            "premise": "Polygon(ABC)&Equal(Add(Pow(LengthOfLine(AB),2),Pow(LengthOfLine(BC),2)),Pow(LengthOfLine(AC),2))",
            "conclusion": "RightTriangle(ABC)"
        },
        "right_triangle_property_length_of_median(ABC,M)": {
            "premise": "RightTriangle(ABC)&IsMedianOfTriangle(BM,BCA)",
            "conclusion": "Equal(Mul(LengthOfLine(BM),2),LengthOfLine(CA))"
        }
    },
    "204": {
        "right_triangle_property_pythagorean(ABC)": {
            "premise": "RightTriangle(ABC)",
            "conclusion": "Equal(Add(Pow(LengthOfLine(AB),2),Pow(LengthOfLine(BC),2)),Pow(LengthOfLine(AC),2))"
        },
        "right_triangle_judgment_pythagorean_inverse(ABC)": {
            "premise": "Polygon(ABC)&Equal(Add(Pow(LengthOfLine(AB),2),Pow(LengthOfLine(BC),2)),Pow(LengthOfLine(AC),2))",
            "conclusion": "RightTriangle(ABC)"
        }
    },
    "205": {
        "isosceles_triangle_judgment_line_equal(ABC)": {
            "premise": "Polygon(ABC)&Equal(LengthOfLine(AB),LengthOfLine(AC))",
            "conclusion": "IsoscelesTriangle(ABC)"
        },
        "isosceles_triangle_property_angle_equal(ABC)": {
            "premise": "IsoscelesTriangle(ABC)",
            "conclusion": "Equal(MeasureOfAngle(ABC),MeasureOfAngle(BCA))"
        }
    },
    "206": {
        "isosceles_triangle_judgment_line_equal(ABC)": {
            "premise": "Polygon(ABC)&Equal(LengthOfLine(AB),LengthOfLine(AC))",
            "conclusion": "IsoscelesTriangle(ABC)"
        },
        "isosceles_triangle_property_line_coincidence(ABC,M)": {
            "premise": "IsoscelesTriangle(ABC)&IsAltitudeOfTriangle(AM,ABC)",
            "conclusion": "IsMedianOfTriangle(AM,ABC)"
        }
    },
    "207": {
        "isosceles_triangle_judgment_line_equal(ABC)": {
            "premise": "Polygon(ABC)&Equal(LengthOfLine(AB),LengthOfLine(AC))",
            "conclusion": "IsoscelesTriangle(ABC)"
        },
        "equilateral_triangle_judgment_isosceles_and_isosceles(ABC)": {
            "premise": "IsoscelesTriangle(ABC)&IsoscelesTriangle(BCA)",
            "conclusion": "EquilateralTriangle(ABC)"
        }
    },
    "208": {
        "isosceles_triangle_judgment_angle_equal(ABC)": {
            "premise": "Polygon(ABC)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(BCA))",
            "conclusion": "IsoscelesTriangle(ABC)"
        },
        "isosceles_triangle_property_angle_equal(ABC)": {
            "premise": "IsoscelesTriangle(ABC)",
            "conclusion": "Equal(MeasureOfAngle(ABC),MeasureOfAngle(BCA))"
        }
    },
    "209": {
        "isosceles_triangle_judgment_angle_equal(ABC)": {
            "premise": "Polygon(ABC)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(BCA))",
            "conclusion": "IsoscelesTriangle(ABC)"
        },
        "isosceles_triangle_property_line_coincidence(ABC,M)": {
            "premise": "IsoscelesTriangle(ABC)&IsAltitudeOfTriangle(AM,ABC)",
            "conclusion": "IsMedianOfTriangle(AM,ABC)"
        }
    },
    "210": {
        "isosceles_triangle_judgment_angle_equal(ABC)": {
            "premise": "Polygon(ABC)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(BCA))",
            "conclusion": "IsoscelesTriangle(ABC)"
        },
        "equilateral_triangle_judgment_isosceles_and_isosceles(ABC)": {
            "premise": "IsoscelesTriangle(ABC)&IsoscelesTriangle(BCA)",
            "conclusion": "EquilateralTriangle(ABC)"
        }
    },
    "211": {
        "isosceles_triangle_property_angle_equal(ABC)": {
            "premise": "IsoscelesTriangle(ABC)",
            "conclusion": "Equal(MeasureOfAngle(ABC),MeasureOfAngle(BCA))"
        },
        "isosceles_triangle_judgment_angle_equal(ABC)": {
            "premise": "Polygon(ABC)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(BCA))",
            "conclusion": "IsoscelesTriangle(ABC)"
        }
    },
    "212": {
        "isosceles_triangle_property_line_coincidence(ABC,M)": {
            "premise": "IsoscelesTriangle(ABC)&IsAltitudeOfTriangle(AM,ABC)",
            "conclusion": "IsMedianOfTriangle(AM,ABC)"
        },
        "centroid_of_triangle_judgment_intersection(O,ABC,M,N)": {
            "premise": "IsMedianOfTriangle(AM,ABC)&IsMedianOfTriangle(CN,CAB)&Collinear(AOM)&Collinear(CON)",
            "conclusion": "IsCentroidOfTriangle(O,BCA)"
        }
    },
    "213": {
        "isosceles_triangle_property_line_coincidence(ABC,M)": {
            "premise": "IsoscelesTriangle(ABC)&IsAltitudeOfTriangle(AM,ABC)",
            "conclusion": "IsMedianOfTriangle(AM,ABC)"
        },
        "right_triangle_property_length_of_median(ABC,M)": {
            "premise": "RightTriangle(CAB)&IsMedianOfTriangle(AM,ABC)",
            "conclusion": "Equal(Mul(LengthOfLine(AM),2),LengthOfLine(BC))"
        }
    },
    "214": {
        "equilateral_triangle_judgment_isosceles_and_isosceles(ABC)": {
            "premise": "IsoscelesTriangle(ABC)&IsoscelesTriangle(BCA)",
            "conclusion": "EquilateralTriangle(ABC)"
        },
        "equilateral_triangle_property_angle(ABC)": {
            "premise": "EquilateralTriangle(ABC)",
            "conclusion": "Equal(MeasureOfAngle(CAB),60)"
        }
    },
    "215": {
        "midsegment_of_quadrilateral_judgment_midpoint(EF,ABCD)": {
            "premise": "Collinear(AEB)&Collinear(DFC)&Line(EF)&Equal(LengthOfLine(AE),LengthOfLine(BE))&Equal(LengthOfLine(DF),LengthOfLine(CF))",
            "conclusion": "IsMidsegmentOfQuadrilateral(EF,ABCD)"
        },
        "midsegment_of_quadrilateral_property_length(EF,ABCD)": {
            "premise": "IsMidsegmentOfQuadrilateral(EF,ABCD)",
            "conclusion": "Equal(Add(LengthOfLine(AD),LengthOfLine(BC)),Mul(LengthOfLine(EF),2))"
        }
    },
    "216": {
        "midsegment_of_quadrilateral_judgment_parallel(EF,ABCD)": {
            "premise": "Collinear(AEB)&Collinear(DFC)&Line(EF)&(Trapezoid(ABCD)|Parallelogram(ABCD))&ParallelBetweenLine(EF,BC)&Equal(LengthOfLine(AE),LengthOfLine(BE))",
            "conclusion": "IsMidsegmentOfQuadrilateral(EF,ABCD)"
        },
        "midsegment_of_quadrilateral_property_length(EF,ABCD)": {
            "premise": "IsMidsegmentOfQuadrilateral(EF,ABCD)",
            "conclusion": "Equal(Add(LengthOfLine(AD),LengthOfLine(BC)),Mul(LengthOfLine(EF),2))"
        }
    },
    "217": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFC)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(LengthOfLine(BD),LengthOfLine(FC))&Equal(LengthOfLine(DA),LengthOfLine(CE))",
            "conclusion": "CongruentBetweenTriangle(ABD,EFC)"
        }
    },
    "218": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFC)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(CEF))&Equal(LengthOfLine(AD),LengthOfLine(EC))",
            "conclusion": "CongruentBetweenTriangle(ABD,EFC)"
        }
    },
    "219": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFC)&Equal(MeasureOfAngle(ABD),MeasureOfAngle(EFC))&Equal(MeasureOfAngle(BDA),MeasureOfAngle(FCE))&Equal(LengthOfLine(AB),LengthOfLine(EF))",
            "conclusion": "CongruentBetweenTriangle(ABD,EFC)"
        }
    },
    "220": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(ADB)&Polygon(ECF)&Equal(MeasureOfAngle(ADB),90)&Equal(MeasureOfAngle(ECF),90)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(LengthOfLine(AD),LengthOfLine(EC)",
            "conclusion": "CongruentBetweenTriangle(ADB,ECF)"
        }
    },
    "221": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(FDE)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(LengthOfLine(BC),LengthOfLine(DE))&Equal(LengthOfLine(CA),LengthOfLine(FD))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,FDE)"
        }
    },
    "222": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(ECF)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(FEC))&Equal(LengthOfLine(AD),LengthOfLine(EC))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABD,ECF)"
        }
    },
    "223": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(ECF)&Equal(MeasureOfAngle(ABD),MeasureOfAngle(CFE))&Equal(MeasureOfAngle(BDA),MeasureOfAngle(ECF))&Equal(LengthOfLine(AB),LengthOfLine(EF))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABD,ECF)"
        }
    },
    "224": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "mirror_congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(ADB)&Polygon(EFC)&Equal(MeasureOfAngle(ADB),90)&Equal(MeasureOfAngle(FCE),90)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(LengthOfLine(DB),LengthOfLine(FC)",
            "conclusion": "MirrorCongruentBetweenTriangle(ADB,EFC)"
        }
    },
    "225": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(BAEF)&ParallelBetweenLine(AB,EF)&Equal(LengthOfLine(AB),LengthOfLine(EF))",
            "conclusion": "Parallelogram(BAEF)"
        }
    },
    "226": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(AEFB)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(LengthOfLine(EA),LengthOfLine(FB))",
            "conclusion": "Parallelogram(AEFB)"
        }
    },
    "227": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(ABEF)&Equal(LengthOfLine(AB),LengthOfLine(EF))",
            "conclusion": "IsoscelesTrapezoid(ABEF)"
        }
    },
    "228": {
        "congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EF))"
        },
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YEF)&Cocircular(X,EF)&Line(AB)&Line(EF)&Equal(LengthOfLine(AB),LengthOfLine(EF))",
            "conclusion": "CongruentBetweenArc(XAB,YEF)"
        }
    },
    "229": {
        "congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(LengthOfLine(AD),LengthOfLine(EH))",
            "conclusion": "CongruentBetweenTriangle(ABD,EFH)"
        }
    },
    "230": {
        "congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(HEF)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(EFH))&Equal(LengthOfLine(DA),LengthOfLine(HE))",
            "conclusion": "CongruentBetweenTriangle(DAB,HEF)"
        }
    },
    "231": {
        "congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(LengthOfLine(AD),LengthOfLine(EF))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABD,EFH)"
        }
    },
    "232": {
        "congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(FHE)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(FHE))&Equal(LengthOfLine(DA),LengthOfLine(FE))",
            "conclusion": "MirrorCongruentBetweenTriangle(DAB,FHE)"
        }
    },
    "233": {
        "congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EH)),Mul(LengthOfLine(EF),LengthOfLine(AD)))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))",
            "conclusion": "SimilarBetweenTriangle(ABD,EFH)"
        }
    },
    "234": {
        "congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(HEF)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(EFH))",
            "conclusion": "SimilarBetweenTriangle(DAB,HEF)"
        }
    },
    "235": {
        "congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EF)),Mul(LengthOfLine(EH),LengthOfLine(AD)))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABD,EFH)"
        }
    },
    "236": {
        "congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "CongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(FHE)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(FHE))",
            "conclusion": "MirrorSimilarBetweenTriangle(DAB,FHE)"
        }
    },
    "237": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(EHF)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(LengthOfLine(BC),LengthOfLine(HF))&Equal(LengthOfLine(CA),LengthOfLine(FE))",
            "conclusion": "CongruentBetweenTriangle(ABC,EHF)"
        }
    },
    "238": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(EHF)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(MeasureOfAngle(CAB),MeasureOfAngle(FEH))&Equal(LengthOfLine(AC),LengthOfLine(EF))",
            "conclusion": "CongruentBetweenTriangle(ABC,EHF)"
        }
    },
    "239": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(EHF)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(EHF))&Equal(MeasureOfAngle(BCA),MeasureOfAngle(HFE))&Equal(LengthOfLine(AB),LengthOfLine(EH))",
            "conclusion": "CongruentBetweenTriangle(ABC,EHF)"
        }
    },
    "240": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(ADB)&Polygon(ECH)&Equal(MeasureOfAngle(ADB),90)&Equal(MeasureOfAngle(ECH),90)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(LengthOfLine(AD),LengthOfLine(EC)",
            "conclusion": "CongruentBetweenTriangle(ADB,ECH)"
        }
    },
    "241": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "mirror_congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABC)&Polygon(HDE)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(LengthOfLine(BC),LengthOfLine(DE))&Equal(LengthOfLine(CA),LengthOfLine(HD))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABC,HDE)"
        }
    },
    "242": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(ECH)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEC))&Equal(LengthOfLine(AD),LengthOfLine(EC))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABD,ECH)"
        }
    },
    "243": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(ECH)&Equal(MeasureOfAngle(ABD),MeasureOfAngle(CHE))&Equal(MeasureOfAngle(BDA),MeasureOfAngle(ECH))&Equal(LengthOfLine(AB),LengthOfLine(EH))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABD,ECH)"
        }
    },
    "244": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "mirror_congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(ACB)&Polygon(EHF)&Equal(MeasureOfAngle(ACB),90)&Equal(MeasureOfAngle(HFE),90)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(LengthOfLine(CB),LengthOfLine(HF)",
            "conclusion": "MirrorCongruentBetweenTriangle(ACB,EHF)"
        }
    },
    "245": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(BAEH)&ParallelBetweenLine(AB,EH)&Equal(LengthOfLine(AB),LengthOfLine(EH))",
            "conclusion": "Parallelogram(BAEH)"
        }
    },
    "246": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(AEHB)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(LengthOfLine(EA),LengthOfLine(HB))",
            "conclusion": "Parallelogram(AEHB)"
        }
    },
    "247": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(ABEH)&Equal(LengthOfLine(AB),LengthOfLine(EH))",
            "conclusion": "IsoscelesTrapezoid(ABEH)"
        }
    },
    "248": {
        "mirror_congruent_quadrilateral_property_line_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(EH))"
        },
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YEH)&Cocircular(X,EH)&Line(AB)&Line(EH)&Equal(LengthOfLine(AB),LengthOfLine(EH))",
            "conclusion": "CongruentBetweenArc(XAB,YEH)"
        }
    },
    "249": {
        "mirror_congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(LengthOfLine(AD),LengthOfLine(EH))",
            "conclusion": "CongruentBetweenTriangle(ABD,EFH)"
        }
    },
    "250": {
        "mirror_congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(HEF)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(EFH))&Equal(LengthOfLine(DA),LengthOfLine(HE))",
            "conclusion": "CongruentBetweenTriangle(DAB,HEF)"
        }
    },
    "251": {
        "mirror_congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(LengthOfLine(AD),LengthOfLine(EF))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABD,EFH)"
        }
    },
    "252": {
        "mirror_congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(FHE)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(FHE))&Equal(LengthOfLine(DA),LengthOfLine(FE))",
            "conclusion": "MirrorCongruentBetweenTriangle(DAB,FHE)"
        }
    },
    "253": {
        "mirror_congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EH)),Mul(LengthOfLine(EF),LengthOfLine(AD)))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))",
            "conclusion": "SimilarBetweenTriangle(ABD,EFH)"
        }
    },
    "254": {
        "mirror_congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(HEF)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(EFH))",
            "conclusion": "SimilarBetweenTriangle(DAB,HEF)"
        }
    },
    "255": {
        "mirror_congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EF)),Mul(LengthOfLine(EH),LengthOfLine(AD)))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABD,EFH)"
        }
    },
    "256": {
        "mirror_congruent_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorCongruentBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(FHE)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(FHE))",
            "conclusion": "MirrorSimilarBetweenTriangle(DAB,FHE)"
        }
    },
    "257": {
        "similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "SimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(LengthOfLine(AD),LengthOfLine(EH))",
            "conclusion": "CongruentBetweenTriangle(ABD,EFH)"
        }
    },
    "258": {
        "similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "SimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(HEF)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(EFH))&Equal(LengthOfLine(DA),LengthOfLine(HE))",
            "conclusion": "CongruentBetweenTriangle(DAB,HEF)"
        }
    },
    "259": {
        "similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "SimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(LengthOfLine(AD),LengthOfLine(EF))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABD,EFH)"
        }
    },
    "260": {
        "similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "SimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(FHE)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(FHE))&Equal(LengthOfLine(DA),LengthOfLine(FE))",
            "conclusion": "MirrorCongruentBetweenTriangle(DAB,FHE)"
        }
    },
    "261": {
        "similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "SimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EH)),Mul(LengthOfLine(EF),LengthOfLine(AD)))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))",
            "conclusion": "SimilarBetweenTriangle(ABD,EFH)"
        }
    },
    "262": {
        "similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "SimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(HEF)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(EFH))",
            "conclusion": "SimilarBetweenTriangle(DAB,HEF)"
        }
    },
    "263": {
        "similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "SimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EF)),Mul(LengthOfLine(EH),LengthOfLine(AD)))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABD,EFH)"
        }
    },
    "264": {
        "similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "SimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(FHE)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(FHE))",
            "conclusion": "MirrorSimilarBetweenTriangle(DAB,FHE)"
        }
    },
    "265": {
        "mirror_similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorSimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(LengthOfLine(AB),LengthOfLine(EF))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(LengthOfLine(AD),LengthOfLine(EH))",
            "conclusion": "CongruentBetweenTriangle(ABD,EFH)"
        }
    },
    "266": {
        "mirror_similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorSimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(HEF)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(EFH))&Equal(LengthOfLine(DA),LengthOfLine(HE))",
            "conclusion": "CongruentBetweenTriangle(DAB,HEF)"
        }
    },
    "267": {
        "mirror_similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorSimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(LengthOfLine(AB),LengthOfLine(EH))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(LengthOfLine(AD),LengthOfLine(EF))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABD,EFH)"
        }
    },
    "268": {
        "mirror_similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorSimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(FHE)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(FHE))&Equal(LengthOfLine(DA),LengthOfLine(FE))",
            "conclusion": "MirrorCongruentBetweenTriangle(DAB,FHE)"
        }
    },
    "269": {
        "mirror_similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorSimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EH)),Mul(LengthOfLine(EF),LengthOfLine(AD)))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))",
            "conclusion": "SimilarBetweenTriangle(ABD,EFH)"
        }
    },
    "270": {
        "mirror_similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorSimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(HEF)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(EFH))",
            "conclusion": "SimilarBetweenTriangle(DAB,HEF)"
        }
    },
    "271": {
        "mirror_similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorSimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_similar_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABD)&Polygon(EFH)&Equal(Mul(LengthOfLine(AB),LengthOfLine(EF)),Mul(LengthOfLine(EH),LengthOfLine(AD)))&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))",
            "conclusion": "MirrorSimilarBetweenTriangle(ABD,EFH)"
        }
    },
    "272": {
        "mirror_similar_quadrilateral_property_angle_equal(ABCD,EFGH)": {
            "premise": "MirrorSimilarBetweenQuadrilateral(ABCD,EFGH)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))"
        },
        "mirror_similar_triangle_judgment_aa(ABC,DEF)": {
            "premise": "Polygon(DAB)&Polygon(FHE)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(HEF))&Equal(MeasureOfAngle(ABD),MeasureOfAngle(FHE))",
            "conclusion": "MirrorSimilarBetweenTriangle(DAB,FHE)"
        }
    },
    "273": {
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(AD,BC)&ParallelBetweenLine(BA,CD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        }
    },
    "274": {
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(AD,BC)&ParallelBetweenLine(BA,CD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_opposite_angle_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))"
        }
    },
    "275": {
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(AD,BC)&ParallelBetweenLine(BA,CD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_diagonal_bisection(ABCD,O)": {
            "premise": "Parallelogram(ABCD)&Collinear(AOC)&Collinear(BOD)",
            "conclusion": "IsMidpointOfLine(O,AC)"
        }
    },
    "276": {
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(AD,BC)&ParallelBetweenLine(BA,CD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_area_formula_common(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(HeightOfQuadrilateral(ABCD),LengthOfLine(BC)))"
        }
    },
    "277": {
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(AD,BC)&ParallelBetweenLine(BA,CD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_area_formula_sine(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(LengthOfLine(AB),LengthOfLine(BC),Sin(MeasureOfAngle(ABC))))"
        }
    },
    "278": {
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(AD,BC)&ParallelBetweenLine(BA,CD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "rectangle_judgment_right_angle(ABCD)": {
            "premise": "Parallelogram(ABCD)&Equal(MeasureOfAngle(ABC),90)",
            "conclusion": "Rectangle(ABCD)"
        }
    },
    "279": {
        "parallelogram_judgment_parallel_and_parallel(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(AD,BC)&ParallelBetweenLine(BA,CD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "rhombus_judgment_parallelogram_and_kite(ABCD)": {
            "premise": "Parallelogram(ABCD)&Kite(ABCD)",
            "conclusion": "Rhombus(ABCD)"
        }
    },
    "280": {
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(BA,CD)&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        }
    },
    "281": {
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(BA,CD)&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_opposite_angle_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))"
        }
    },
    "282": {
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(BA,CD)&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_diagonal_bisection(ABCD,O)": {
            "premise": "Parallelogram(ABCD)&Collinear(AOC)&Collinear(BOD)",
            "conclusion": "IsMidpointOfLine(O,AC)"
        }
    },
    "283": {
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(BA,CD)&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_area_formula_common(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(HeightOfQuadrilateral(ABCD),LengthOfLine(BC)))"
        }
    },
    "284": {
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(BA,CD)&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_area_formula_sine(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(LengthOfLine(AB),LengthOfLine(BC),Sin(MeasureOfAngle(ABC))))"
        }
    },
    "285": {
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(BA,CD)&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "rectangle_judgment_right_angle(ABCD)": {
            "premise": "Parallelogram(ABCD)&Equal(MeasureOfAngle(ABC),90)",
            "conclusion": "Rectangle(ABCD)"
        }
    },
    "286": {
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(BA,CD)&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "rhombus_judgment_parallelogram_and_kite(ABCD)": {
            "premise": "Parallelogram(ABCD)&Kite(ABCD)",
            "conclusion": "Rhombus(ABCD)"
        }
    },
    "287": {
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AD),LengthOfLine(BC))&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        }
    },
    "288": {
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AD),LengthOfLine(BC))&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_opposite_angle_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))"
        }
    },
    "289": {
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AD),LengthOfLine(BC))&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_diagonal_bisection(ABCD,O)": {
            "premise": "Parallelogram(ABCD)&Collinear(AOC)&Collinear(BOD)",
            "conclusion": "IsMidpointOfLine(O,AC)"
        }
    },
    "290": {
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AD),LengthOfLine(BC))&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_area_formula_common(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(HeightOfQuadrilateral(ABCD),LengthOfLine(BC)))"
        }
    },
    "291": {
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AD),LengthOfLine(BC))&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_area_formula_sine(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(LengthOfLine(AB),LengthOfLine(BC),Sin(MeasureOfAngle(ABC))))"
        }
    },
    "292": {
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AD),LengthOfLine(BC))&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "rectangle_judgment_right_angle(ABCD)": {
            "premise": "Parallelogram(ABCD)&Equal(MeasureOfAngle(ABC),90)",
            "conclusion": "Rectangle(ABCD)"
        }
    },
    "293": {
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AD),LengthOfLine(BC))&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "rhombus_judgment_parallelogram_and_kite(ABCD)": {
            "premise": "Parallelogram(ABCD)&Kite(ABCD)",
            "conclusion": "Rhombus(ABCD)"
        }
    },
    "294": {
        "parallelogram_judgment_angle_and_angle(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        }
    },
    "295": {
        "parallelogram_judgment_angle_and_angle(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_opposite_angle_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))"
        }
    },
    "296": {
        "parallelogram_judgment_angle_and_angle(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_diagonal_bisection(ABCD,O)": {
            "premise": "Parallelogram(ABCD)&Collinear(AOC)&Collinear(BOD)",
            "conclusion": "IsMidpointOfLine(O,AC)"
        }
    },
    "297": {
        "parallelogram_judgment_angle_and_angle(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_area_formula_common(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(HeightOfQuadrilateral(ABCD),LengthOfLine(BC)))"
        }
    },
    "298": {
        "parallelogram_judgment_angle_and_angle(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_area_formula_sine(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(LengthOfLine(AB),LengthOfLine(BC),Sin(MeasureOfAngle(ABC))))"
        }
    },
    "299": {
        "parallelogram_judgment_angle_and_angle(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "rectangle_judgment_right_angle(ABCD)": {
            "premise": "Parallelogram(ABCD)&Equal(MeasureOfAngle(ABC),90)",
            "conclusion": "Rectangle(ABCD)"
        }
    },
    "300": {
        "parallelogram_judgment_angle_and_angle(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))",
            "conclusion": "Parallelogram(ABCD)"
        },
        "rhombus_judgment_parallelogram_and_kite(ABCD)": {
            "premise": "Parallelogram(ABCD)&Kite(ABCD)",
            "conclusion": "Rhombus(ABCD)"
        }
    },
    "301": {
        "parallelogram_judgment_diagonal_bisection(ABCD,O)": {
            "premise": "Polygon(ABCD)&Collinear(AOC)&Collinear(BOD)&IsMidpointOfLine(O,AC)&IsMidpointOfLine(O,BD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        }
    },
    "302": {
        "parallelogram_judgment_diagonal_bisection(ABCD,O)": {
            "premise": "Polygon(ABCD)&Collinear(AOC)&Collinear(BOD)&IsMidpointOfLine(O,AC)&IsMidpointOfLine(O,BD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_opposite_angle_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))"
        }
    },
    "303": {
        "parallelogram_judgment_diagonal_bisection(ABCD,O)": {
            "premise": "Polygon(ABCD)&Collinear(AOC)&Collinear(BOD)&IsMidpointOfLine(O,AC)&IsMidpointOfLine(O,BD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_property_diagonal_bisection(ABCD,O)": {
            "premise": "Parallelogram(ABCD)&Collinear(AOC)&Collinear(BOD)",
            "conclusion": "IsMidpointOfLine(O,AC)"
        }
    },
    "304": {
        "parallelogram_judgment_diagonal_bisection(ABCD,O)": {
            "premise": "Polygon(ABCD)&Collinear(AOC)&Collinear(BOD)&IsMidpointOfLine(O,AC)&IsMidpointOfLine(O,BD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_area_formula_common(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(HeightOfQuadrilateral(ABCD),LengthOfLine(BC)))"
        }
    },
    "305": {
        "parallelogram_judgment_diagonal_bisection(ABCD,O)": {
            "premise": "Polygon(ABCD)&Collinear(AOC)&Collinear(BOD)&IsMidpointOfLine(O,AC)&IsMidpointOfLine(O,BD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "parallelogram_area_formula_sine(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(LengthOfLine(AB),LengthOfLine(BC),Sin(MeasureOfAngle(ABC))))"
        }
    },
    "306": {
        "parallelogram_judgment_diagonal_bisection(ABCD,O)": {
            "premise": "Polygon(ABCD)&Collinear(AOC)&Collinear(BOD)&IsMidpointOfLine(O,AC)&IsMidpointOfLine(O,BD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "rectangle_judgment_right_angle(ABCD)": {
            "premise": "Parallelogram(ABCD)&Equal(MeasureOfAngle(ABC),90)",
            "conclusion": "Rectangle(ABCD)"
        }
    },
    "307": {
        "parallelogram_judgment_diagonal_bisection(ABCD,O)": {
            "premise": "Polygon(ABCD)&Collinear(AOC)&Collinear(BOD)&IsMidpointOfLine(O,AC)&IsMidpointOfLine(O,BD)",
            "conclusion": "Parallelogram(ABCD)"
        },
        "rhombus_judgment_parallelogram_and_kite(ABCD)": {
            "premise": "Parallelogram(ABCD)&Kite(ABCD)",
            "conclusion": "Rhombus(ABCD)"
        }
    },
    "308": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(BAE)&Polygon(CDF)&Equal(LengthOfLine(BA),LengthOfLine(CD))&Equal(LengthOfLine(AE),LengthOfLine(DF))&Equal(LengthOfLine(EB),LengthOfLine(FC))",
            "conclusion": "CongruentBetweenTriangle(BAE,CDF)"
        }
    },
    "309": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(BAE)&Polygon(CDF)&Equal(LengthOfLine(BA),LengthOfLine(CD))&Equal(MeasureOfAngle(EBA),MeasureOfAngle(FCD))&Equal(LengthOfLine(BE),LengthOfLine(CF))",
            "conclusion": "CongruentBetweenTriangle(BAE,CDF)"
        }
    },
    "310": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(BAE)&Polygon(CDF)&Equal(MeasureOfAngle(BAE),MeasureOfAngle(CDF))&Equal(MeasureOfAngle(AEB),MeasureOfAngle(DFC))&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "CongruentBetweenTriangle(BAE,CDF)"
        }
    },
    "311": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(BEA)&Polygon(CFD)&Equal(MeasureOfAngle(BEA),90)&Equal(MeasureOfAngle(CFD),90)&Equal(LengthOfLine(BA),LengthOfLine(CD))&Equal(LengthOfLine(BE),LengthOfLine(CF)",
            "conclusion": "CongruentBetweenTriangle(BEA,CFD)"
        }
    },
    "312": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "mirror_congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(BAE)&Polygon(DFC)&Equal(LengthOfLine(BA),LengthOfLine(CD))&Equal(LengthOfLine(AE),LengthOfLine(FC))&Equal(LengthOfLine(EB),LengthOfLine(DF))",
            "conclusion": "MirrorCongruentBetweenTriangle(BAE,DFC)"
        }
    },
    "313": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(BAF)&Polygon(CED)&Equal(LengthOfLine(BA),LengthOfLine(CD))&Equal(MeasureOfAngle(FBA),MeasureOfAngle(DCE))&Equal(LengthOfLine(BF),LengthOfLine(CE))",
            "conclusion": "MirrorCongruentBetweenTriangle(BAF,CED)"
        }
    },
    "314": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(BAF)&Polygon(CED)&Equal(MeasureOfAngle(BAF),MeasureOfAngle(EDC))&Equal(MeasureOfAngle(AFB),MeasureOfAngle(CED))&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "MirrorCongruentBetweenTriangle(BAF,CED)"
        }
    },
    "315": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "mirror_congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(BEA)&Polygon(CDF)&Equal(MeasureOfAngle(BEA),90)&Equal(MeasureOfAngle(DFC),90)&Equal(LengthOfLine(BA),LengthOfLine(CD))&Equal(LengthOfLine(EA),LengthOfLine(DF)",
            "conclusion": "MirrorCongruentBetweenTriangle(BEA,CDF)"
        }
    },
    "316": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(BA,CD)&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "Parallelogram(ABCD)"
        }
    },
    "317": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(BCDA)&Equal(LengthOfLine(BA),LengthOfLine(CD))&Equal(LengthOfLine(CB),LengthOfLine(DA))",
            "conclusion": "Parallelogram(BCDA)"
        }
    },
    "318": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(BACD)&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "IsoscelesTrapezoid(BACD)"
        }
    },
    "319": {
        "parallelogram_property_opposite_line_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(LengthOfLine(BA),LengthOfLine(CD))"
        },
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XBA)&Arc(YCD)&Cocircular(X,CD)&Line(BA)&Line(CD)&Equal(LengthOfLine(BA),LengthOfLine(CD))",
            "conclusion": "CongruentBetweenArc(XBA,YCD)"
        }
    },
    "320": {
        "parallelogram_property_opposite_angle_equal(ABCD)": {
            "premise": "Parallelogram(ABCD)",
            "conclusion": "Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))"
        },
        "parallelogram_judgment_angle_and_angle(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(MeasureOfAngle(DAB),MeasureOfAngle(BCD))&Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))",
            "conclusion": "Parallelogram(ABCD)"
        }
    },
    "321": {
        "parallelogram_property_diagonal_bisection(ABCD,O)": {
            "premise": "Parallelogram(ABCD)&Collinear(AOC)&Collinear(BOD)",
            "conclusion": "IsMidpointOfLine(O,AC)"
        },
        "parallelogram_judgment_diagonal_bisection(ABCD,O)": {
            "premise": "Polygon(ABCD)&Collinear(AOC)&Collinear(BOD)&IsMidpointOfLine(O,AC)&IsMidpointOfLine(O,BD)",
            "conclusion": "Parallelogram(ABCD)"
        }
    },
    "322": {
        "kite_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AB),LengthOfLine(AD))&Equal(LengthOfLine(CB),LengthOfLine(CD))",
            "conclusion": "Kite(ABCD)"
        },
        "kite_property_diagonal_perpendicular_bisection(ABCD,O)": {
            "premise": "Kite(ABCD)&Collinear(AOC)&Collinear(BOD)",
            "conclusion": "IsPerpendicularBisectorOfLine(AO,BD)"
        }
    },
    "323": {
        "kite_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AB),LengthOfLine(AD))&Equal(LengthOfLine(CB),LengthOfLine(CD))",
            "conclusion": "Kite(ABCD)"
        },
        "kite_property_opposite_angle_equal(ABCD)": {
            "premise": "Kite(ABCD)",
            "conclusion": "Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))"
        }
    },
    "324": {
        "kite_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AB),LengthOfLine(AD))&Equal(LengthOfLine(CB),LengthOfLine(CD))",
            "conclusion": "Kite(ABCD)"
        },
        "kite_area_formula_diagonal(ABCD)": {
            "premise": "Kite(ABCD)&Line(BD)&Line(AC)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(LengthOfLine(BD),LengthOfLine(AC),1/2))"
        }
    },
    "325": {
        "kite_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AB),LengthOfLine(AD))&Equal(LengthOfLine(CB),LengthOfLine(CD))",
            "conclusion": "Kite(ABCD)"
        },
        "kite_area_formula_sine(ABCD)": {
            "premise": "Kite(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(LengthOfLine(AB),LengthOfLine(BC),Sin(MeasureOfAngle(ABC))))"
        }
    },
    "326": {
        "kite_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABCD)&Equal(LengthOfLine(AB),LengthOfLine(AD))&Equal(LengthOfLine(CB),LengthOfLine(CD))",
            "conclusion": "Kite(ABCD)"
        },
        "rhombus_judgment_parallelogram_and_kite(ABCD)": {
            "premise": "Parallelogram(ABCD)&Kite(ABCD)",
            "conclusion": "Rhombus(ABCD)"
        }
    },
    "327": {
        "kite_property_diagonal_perpendicular_bisection(ABCD,O)": {
            "premise": "Kite(ABCD)&Collinear(AOC)&Collinear(BOD)",
            "conclusion": "IsPerpendicularBisectorOfLine(AO,BD)"
        },
        "perpendicular_bisector_property_distance_equal(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(AO,BD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(AD))"
        }
    },
    "328": {
        "kite_property_diagonal_perpendicular_bisection(ABCD,O)": {
            "premise": "Kite(ABCD)&Collinear(AOC)&Collinear(BOD)",
            "conclusion": "IsPerpendicularBisectorOfLine(AO,BD)"
        },
        "perpendicular_bisector_property_bisector(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(AO,BD)&Angle(DAO)&Angle(OAB)",
            "conclusion": "IsBisectorOfAngle(AO,DAB)"
        }
    },
    "329": {
        "kite_property_opposite_angle_equal(ABCD)": {
            "premise": "Kite(ABCD)",
            "conclusion": "Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))"
        },
        "parallelogram_judgment_angle_and_angle(ABCD)": {
            "premise": "Polygon(BCDA)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(CDA))&Equal(MeasureOfAngle(BCD),MeasureOfAngle(DAB))",
            "conclusion": "Parallelogram(BCDA)"
        }
    },
    "330": {
        "rectangle_judgment_right_angle(ABCD)": {
            "premise": "Parallelogram(ABCD)&Equal(MeasureOfAngle(ABC),90)",
            "conclusion": "Rectangle(ABCD)"
        },
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        }
    },
    "331": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ACE)&Polygon(BDF)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(LengthOfLine(CE),LengthOfLine(DF))&Equal(LengthOfLine(EA),LengthOfLine(FB))",
            "conclusion": "CongruentBetweenTriangle(ACE,BDF)"
        }
    },
    "332": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ACE)&Polygon(BDF)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(MeasureOfAngle(EAC),MeasureOfAngle(FBD))&Equal(LengthOfLine(AE),LengthOfLine(BF))",
            "conclusion": "CongruentBetweenTriangle(ACE,BDF)"
        }
    },
    "333": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ACE)&Polygon(BDF)&Equal(MeasureOfAngle(ACE),MeasureOfAngle(BDF))&Equal(MeasureOfAngle(CEA),MeasureOfAngle(DFB))&Equal(LengthOfLine(AC),LengthOfLine(BD))",
            "conclusion": "CongruentBetweenTriangle(ACE,BDF)"
        }
    },
    "334": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(AFC)&Polygon(BED)&Equal(MeasureOfAngle(AFC),90)&Equal(MeasureOfAngle(BED),90)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(LengthOfLine(AF),LengthOfLine(BE)",
            "conclusion": "CongruentBetweenTriangle(AFC,BED)"
        }
    },
    "335": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "mirror_congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ACF)&Polygon(DEB)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(LengthOfLine(CF),LengthOfLine(EB))&Equal(LengthOfLine(FA),LengthOfLine(DE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ACF,DEB)"
        }
    },
    "336": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ACF)&Polygon(BED)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(MeasureOfAngle(FAC),MeasureOfAngle(DBE))&Equal(LengthOfLine(AF),LengthOfLine(BE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ACF,BED)"
        }
    },
    "337": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ACF)&Polygon(BED)&Equal(MeasureOfAngle(ACF),MeasureOfAngle(EDB))&Equal(MeasureOfAngle(CFA),MeasureOfAngle(BED))&Equal(LengthOfLine(AC),LengthOfLine(BD))",
            "conclusion": "MirrorCongruentBetweenTriangle(ACF,BED)"
        }
    },
    "338": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "mirror_congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(AEC)&Polygon(BDF)&Equal(MeasureOfAngle(AEC),90)&Equal(MeasureOfAngle(DFB),90)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(LengthOfLine(EC),LengthOfLine(DF)",
            "conclusion": "MirrorCongruentBetweenTriangle(AEC,BDF)"
        }
    },
    "339": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(CABD)&ParallelBetweenLine(AC,BD)&Equal(LengthOfLine(AC),LengthOfLine(BD))",
            "conclusion": "Parallelogram(CABD)"
        }
    },
    "340": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABDC)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(LengthOfLine(BA),LengthOfLine(DC))",
            "conclusion": "Parallelogram(ABDC)"
        }
    },
    "341": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(ACBD)&Equal(LengthOfLine(AC),LengthOfLine(BD))",
            "conclusion": "IsoscelesTrapezoid(ACBD)"
        }
    },
    "342": {
        "rectangle_property_diagonal_equal(ABCD)": {
            "premise": "Rectangle(ABCD)&Line(AC)&Line(BD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XAC)&Arc(YBD)&Cocircular(X,BD)&Line(AC)&Line(BD)&Equal(LengthOfLine(AC),LengthOfLine(BD))",
            "conclusion": "CongruentBetweenArc(XAC,YBD)"
        }
    },
    "343": {
        "trapezoid_judgment_parallel(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(AD,BC)&~ParallelBetweenLine(BA,CD)",
            "conclusion": "Trapezoid(ABCD)"
        },
        "trapezoid_area_formula(ABCD)": {
            "premise": "Trapezoid(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(Add(LengthOfLine(AD),LengthOfLine(BC)),HeightOfQuadrilateral(ABCD),1/2))"
        }
    },
    "344": {
        "trapezoid_judgment_parallel(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(AD,BC)&~ParallelBetweenLine(BA,CD)",
            "conclusion": "Trapezoid(ABCD)"
        },
        "right_trapezoid_judgment_right_angle(ABCD)": {
            "premise": "Trapezoid(ABCD)&Equal(MeasureOfAngle(ABC),90)",
            "conclusion": "RightTrapezoid(ABCD)"
        }
    },
    "345": {
        "trapezoid_judgment_parallel(ABCD)": {
            "premise": "Polygon(ABCD)&ParallelBetweenLine(AD,BC)&~ParallelBetweenLine(BA,CD)",
            "conclusion": "Trapezoid(ABCD)"
        },
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(ABCD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "IsoscelesTrapezoid(ABCD)"
        }
    },
    "346": {
        "right_trapezoid_judgment_right_angle(ABCD)": {
            "premise": "Trapezoid(ABCD)&Equal(MeasureOfAngle(ABC),90)",
            "conclusion": "RightTrapezoid(ABCD)"
        },
        "right_trapezoid_area_formular(ABCD)": {
            "premise": "RightTrapezoid(ABCD)",
            "conclusion": "Equal(AreaOfQuadrilateral(ABCD),Mul(Add(LengthOfLine(AD),LengthOfLine(BC)),LengthOfLine(AB),1/2))"
        }
    },
    "347": {
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(ABCD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "IsoscelesTrapezoid(ABCD)"
        },
        "isosceles_trapezoid_property_angle_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(MeasureOfAngle(ABC),MeasureOfAngle(BCD))"
        }
    },
    "348": {
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(ABCD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "IsoscelesTrapezoid(ABCD)"
        },
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        }
    },
    "349": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ACE)&Polygon(BDF)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(LengthOfLine(CE),LengthOfLine(DF))&Equal(LengthOfLine(EA),LengthOfLine(FB))",
            "conclusion": "CongruentBetweenTriangle(ACE,BDF)"
        }
    },
    "350": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ACE)&Polygon(BDF)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(MeasureOfAngle(EAC),MeasureOfAngle(FBD))&Equal(LengthOfLine(AE),LengthOfLine(BF))",
            "conclusion": "CongruentBetweenTriangle(ACE,BDF)"
        }
    },
    "351": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ACE)&Polygon(BDF)&Equal(MeasureOfAngle(ACE),MeasureOfAngle(BDF))&Equal(MeasureOfAngle(CEA),MeasureOfAngle(DFB))&Equal(LengthOfLine(AC),LengthOfLine(BD))",
            "conclusion": "CongruentBetweenTriangle(ACE,BDF)"
        }
    },
    "352": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(AEC)&Polygon(BFD)&Equal(MeasureOfAngle(AEC),90)&Equal(MeasureOfAngle(BFD),90)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(LengthOfLine(AE),LengthOfLine(BF)",
            "conclusion": "CongruentBetweenTriangle(AEC,BFD)"
        }
    },
    "353": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "mirror_congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ACF)&Polygon(DEB)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(LengthOfLine(CF),LengthOfLine(EB))&Equal(LengthOfLine(FA),LengthOfLine(DE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ACF,DEB)"
        }
    },
    "354": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ACF)&Polygon(BED)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(MeasureOfAngle(FAC),MeasureOfAngle(DBE))&Equal(LengthOfLine(AF),LengthOfLine(BE))",
            "conclusion": "MirrorCongruentBetweenTriangle(ACF,BED)"
        }
    },
    "355": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ACF)&Polygon(BED)&Equal(MeasureOfAngle(ACF),MeasureOfAngle(EDB))&Equal(MeasureOfAngle(CFA),MeasureOfAngle(BED))&Equal(LengthOfLine(AC),LengthOfLine(BD))",
            "conclusion": "MirrorCongruentBetweenTriangle(ACF,BED)"
        }
    },
    "356": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "mirror_congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(AEC)&Polygon(BDF)&Equal(MeasureOfAngle(AEC),90)&Equal(MeasureOfAngle(DFB),90)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(LengthOfLine(EC),LengthOfLine(DF)",
            "conclusion": "MirrorCongruentBetweenTriangle(AEC,BDF)"
        }
    },
    "357": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(CABD)&ParallelBetweenLine(AC,BD)&Equal(LengthOfLine(AC),LengthOfLine(BD))",
            "conclusion": "Parallelogram(CABD)"
        }
    },
    "358": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ABDC)&Equal(LengthOfLine(AC),LengthOfLine(BD))&Equal(LengthOfLine(BA),LengthOfLine(DC))",
            "conclusion": "Parallelogram(ABDC)"
        }
    },
    "359": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(ACBD)&Equal(LengthOfLine(AC),LengthOfLine(BD))",
            "conclusion": "IsoscelesTrapezoid(ACBD)"
        }
    },
    "360": {
        "isosceles_trapezoid_property_diagonal_equal(ABCD)": {
            "premise": "IsoscelesTrapezoid(ABCD)",
            "conclusion": "Equal(LengthOfLine(AC),LengthOfLine(BD))"
        },
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XAC)&Arc(YBD)&Cocircular(X,BD)&Line(AC)&Line(BD)&Equal(LengthOfLine(AC),LengthOfLine(BD))",
            "conclusion": "CongruentBetweenArc(XAC,YBD)"
        }
    },
    "361": {
        "congruent_arc_judgment_length_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Equal(LengthOfArc(XAB),LengthOfArc(YCD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        },
        "congruent_arc_property_length_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)",
            "conclusion": "Equal(LengthOfArc(XAB),LengthOfArc(YCD))"
        }
    },
    "362": {
        "congruent_arc_judgment_length_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Equal(LengthOfArc(XAB),LengthOfArc(YCD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        },
        "congruent_arc_property_measure_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)",
            "conclusion": "Equal(MeasureOfArc(XAB),MeasureOfArc(YCD))"
        }
    },
    "363": {
        "congruent_arc_judgment_length_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Equal(LengthOfArc(XAB),LengthOfArc(YCD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        },
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        }
    },
    "364": {
        "congruent_arc_judgment_measure_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Equal(MeasureOfArc(XAB),MeasureOfArc(YCD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        },
        "congruent_arc_property_length_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)",
            "conclusion": "Equal(LengthOfArc(XAB),LengthOfArc(YCD))"
        }
    },
    "365": {
        "congruent_arc_judgment_measure_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Equal(MeasureOfArc(XAB),MeasureOfArc(YCD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        },
        "congruent_arc_property_measure_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)",
            "conclusion": "Equal(MeasureOfArc(XAB),MeasureOfArc(YCD))"
        }
    },
    "366": {
        "congruent_arc_judgment_measure_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Equal(MeasureOfArc(XAB),MeasureOfArc(YCD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        },
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        }
    },
    "367": {
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Line(AB)&Line(CD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        },
        "congruent_arc_property_length_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)",
            "conclusion": "Equal(LengthOfArc(XAB),LengthOfArc(YCD))"
        }
    },
    "368": {
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Line(AB)&Line(CD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        },
        "congruent_arc_property_measure_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)",
            "conclusion": "Equal(MeasureOfArc(XAB),MeasureOfArc(YCD))"
        }
    },
    "369": {
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Line(AB)&Line(CD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        },
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        }
    },
    "370": {
        "congruent_arc_property_length_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)",
            "conclusion": "Equal(LengthOfArc(XAB),LengthOfArc(YCD))"
        },
        "congruent_arc_judgment_length_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Equal(LengthOfArc(XAB),LengthOfArc(YCD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        }
    },
    "371": {
        "congruent_arc_property_measure_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)",
            "conclusion": "Equal(MeasureOfArc(XAB),MeasureOfArc(YCD))"
        },
        "congruent_arc_judgment_measure_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Equal(MeasureOfArc(XAB),MeasureOfArc(YCD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        }
    },
    "372": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABE)&Polygon(CDF)&Equal(LengthOfLine(AB),LengthOfLine(CD))&Equal(LengthOfLine(BE),LengthOfLine(DF))&Equal(LengthOfLine(EA),LengthOfLine(FC))",
            "conclusion": "CongruentBetweenTriangle(ABE,CDF)"
        }
    },
    "373": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABE)&Polygon(CDF)&Equal(LengthOfLine(AB),LengthOfLine(CD))&Equal(MeasureOfAngle(EAB),MeasureOfAngle(FCD))&Equal(LengthOfLine(AE),LengthOfLine(CF))",
            "conclusion": "CongruentBetweenTriangle(ABE,CDF)"
        }
    },
    "374": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ABE)&Polygon(CDF)&Equal(MeasureOfAngle(ABE),MeasureOfAngle(CDF))&Equal(MeasureOfAngle(BEA),MeasureOfAngle(DFC))&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "CongruentBetweenTriangle(ABE,CDF)"
        }
    },
    "375": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(AEB)&Polygon(CFD)&Equal(MeasureOfAngle(AEB),90)&Equal(MeasureOfAngle(CFD),90)&Equal(LengthOfLine(AB),LengthOfLine(CD))&Equal(LengthOfLine(AE),LengthOfLine(CF)",
            "conclusion": "CongruentBetweenTriangle(AEB,CFD)"
        }
    },
    "376": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "mirror_congruent_triangle_judgment_sss(ABC,DEF)": {
            "premise": "Polygon(ABE)&Polygon(DFC)&Equal(LengthOfLine(AB),LengthOfLine(CD))&Equal(LengthOfLine(BE),LengthOfLine(FC))&Equal(LengthOfLine(EA),LengthOfLine(DF))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABE,DFC)"
        }
    },
    "377": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "mirror_congruent_triangle_judgment_sas(ABC,DEF)": {
            "premise": "Polygon(ABE)&Polygon(CFD)&Equal(LengthOfLine(AB),LengthOfLine(CD))&Equal(MeasureOfAngle(EAB),MeasureOfAngle(DCF))&Equal(LengthOfLine(AE),LengthOfLine(CF))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABE,CFD)"
        }
    },
    "378": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "mirror_congruent_triangle_judgment_aas(ABC,DEF)": {
            "premise": "Polygon(ABE)&Polygon(CFD)&Equal(MeasureOfAngle(ABE),MeasureOfAngle(FDC))&Equal(MeasureOfAngle(BEA),MeasureOfAngle(CFD))&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "MirrorCongruentBetweenTriangle(ABE,CFD)"
        }
    },
    "379": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "mirror_congruent_triangle_judgment_hl(ABC,DEF)": {
            "premise": "Polygon(AEB)&Polygon(CDF)&Equal(MeasureOfAngle(AEB),90)&Equal(MeasureOfAngle(DFC),90)&Equal(LengthOfLine(AB),LengthOfLine(CD))&Equal(LengthOfLine(EB),LengthOfLine(DF)",
            "conclusion": "MirrorCongruentBetweenTriangle(AEB,CDF)"
        }
    },
    "380": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "parallelogram_judgment_parallel_and_equal(ABCD)": {
            "premise": "Polygon(BACD)&ParallelBetweenLine(AB,CD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "Parallelogram(BACD)"
        }
    },
    "381": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "parallelogram_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(ACDB)&Equal(LengthOfLine(AB),LengthOfLine(CD))&Equal(LengthOfLine(CA),LengthOfLine(DB))",
            "conclusion": "Parallelogram(ACDB)"
        }
    },
    "382": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "isosceles_trapezoid_judgment_line_equal(ABCD)": {
            "premise": "Trapezoid(ABCD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "IsoscelesTrapezoid(ABCD)"
        }
    },
    "383": {
        "congruent_arc_property_chord_equal(XAB,YCD)": {
            "premise": "CongruentBetweenArc(XAB,YCD)&Line(AB)&Line(CD)",
            "conclusion": "Equal(LengthOfLine(AB),LengthOfLine(CD))"
        },
        "congruent_arc_judgment_chord_equal(XAB,YCD)": {
            "premise": "Arc(XAB)&Arc(YCD)&Cocircular(X,CD)&Line(AB)&Line(CD)&Equal(LengthOfLine(AB),LengthOfLine(CD))",
            "conclusion": "CongruentBetweenArc(XAB,YCD)"
        }
    },
    "384": {
        "circle_property_chord_perpendicular_bisect_chord(O,PM,AB)": {
            "premise": "Cocircular(O,AB)&Collinear(AMB)&IsCentreOfCircle(P,O)&Equal(MeasureOfAngle(AMP),90)",
            "conclusion": "IsPerpendicularBisectorOfLine(PM,AB)"
        },
        "perpendicular_bisector_property_distance_equal(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(PM,AB)",
            "conclusion": "Equal(LengthOfLine(PA),LengthOfLine(PB))"
        }
    },
    "385": {
        "circle_property_chord_perpendicular_bisect_chord(O,PM,AB)": {
            "premise": "Cocircular(O,AB)&Collinear(AMB)&IsCentreOfCircle(P,O)&Equal(MeasureOfAngle(AMP),90)",
            "conclusion": "IsPerpendicularBisectorOfLine(PM,AB)"
        },
        "perpendicular_bisector_property_bisector(CO,AB)": {
            "premise": "IsPerpendicularBisectorOfLine(PM,AB)&Angle(BPM)&Angle(MPA)",
            "conclusion": "IsBisectorOfAngle(PM,BPA)"
        }
    },
    "386": {
        "diameter_of_circle_judgment_pass_centre(APB,O)": {
            "premise": "Cocircular(O,AB)&Collinear(APB)&IsCentreOfCircle(P,O)",
            "conclusion": "IsDiameterOfCircle(AB,O)"
        },
        "diameter_of_circle_property_length_equal(AB,O)": {
            "premise": "IsDiameterOfCircle(AB,O)",
            "conclusion": "Equal(LengthOfLine(AB),DiameterOfCircle(O))"
        }
    },
    "387": {
        "diameter_of_circle_judgment_pass_centre(APB,O)": {
            "premise": "Cocircular(O,AB)&Collinear(APB)&IsCentreOfCircle(P,O)",
            "conclusion": "IsDiameterOfCircle(AB,O)"
        },
        "diameter_of_circle_property_right_angle(BCA,O)": {
            "premise": "IsDiameterOfCircle(AB,O)&Cocircular(O,BCA)&Angle(BCA)",
            "conclusion": "PerpendicularBetweenLine(BC,AC)"
        }
    },
    "388": {
        "diameter_of_circle_judgment_right_angle(BCA,O)": {
            "premise": "Cocircular(O,BCA)&Equal(MeasureOfAngle(BCA),90)",
            "conclusion": "IsDiameterOfCircle(AB,O)"
        },
        "diameter_of_circle_property_length_equal(AB,O)": {
            "premise": "IsDiameterOfCircle(AB,O)",
            "conclusion": "Equal(LengthOfLine(AB),DiameterOfCircle(O))"
        }
    },
    "389": {
        "diameter_of_circle_judgment_right_angle(BCA,O)": {
            "premise": "Cocircular(O,BCA)&Equal(MeasureOfAngle(BCA),90)",
            "conclusion": "IsDiameterOfCircle(AB,O)"
        },
        "diameter_of_circle_property_right_angle(BCA,O)": {
            "premise": "IsDiameterOfCircle(AB,O)&Cocircular(O,BCA)&Angle(BCA)",
            "conclusion": "PerpendicularBetweenLine(BC,AC)"
        }
    },
    "390": {
        "diameter_of_circle_property_right_angle(BCA,O)": {
            "premise": "IsDiameterOfCircle(AB,O)&Cocircular(O,BCA)&Angle(BCA)",
            "conclusion": "PerpendicularBetweenLine(BC,AC)"
        },
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(BC,AC)&PerpendicularBetweenLine(CA,DA)",
            "conclusion": "ParallelBetweenLine(CB,AD)"
        }
    },
    "391": {
        "tangent_of_circle_judgment_perpendicular(PA,O,Q)": {
            "premise": "Cocircular(O,A)&IsCentreOfCircle(Q,O)&Angle(QAP)&Equal(MeasureOfAngle(QAP),90)",
            "conclusion": "IsTangentOfCircle(PA,O)"
        },
        "circle_property_circular_power_tangent_and_segment_line(PA,PCD,O)": {
            "premise": "IsTangentOfCircle(PA,O)&Cocircular(O,CD)&Collinear(PCD)",
            "conclusion": "Equal(Mul(LengthOfLine(PA),LengthOfLine(PA)),Mul(LengthOfLine(PC),LengthOfLine(PD)))"
        }
    },
    "392": {
        "tangent_of_circle_judgment_perpendicular(PA,O,Q)": {
            "premise": "Cocircular(O,A)&IsCentreOfCircle(Q,O)&Angle(QAP)&Equal(MeasureOfAngle(QAP),90)",
            "conclusion": "IsTangentOfCircle(PA,O)"
        },
        "circle_property_angle_of_osculation(OAB,P)": {
            "premise": "Arc(OAB)&Angle(BAP)&IsTangentOfCircle(PA,O)",
            "conclusion": "Equal(MeasureOfAngle(BAP),Mul(MeasureOfArc(OAB),1/2))"
        }
    },
    "393": {
        "tangent_of_circle_judgment_perpendicular(PA,O,Q)": {
            "premise": "Cocircular(O,A)&IsCentreOfCircle(Q,O)&Angle(QAP)&Equal(MeasureOfAngle(QAP),90)",
            "conclusion": "IsTangentOfCircle(PA,O)"
        },
        "tangent_of_circle_property_perpendicular(PA,O,Q)": {
            "premise": "IsTangentOfCircle(PA,O)&Angle(QAP)&IsCentreOfCircle(Q,O)",
            "conclusion": "PerpendicularBetweenLine(QA,PA)"
        }
    },
    "394": {
        "tangent_of_circle_judgment_perpendicular(PA,O,Q)": {
            "premise": "Cocircular(O,A)&IsCentreOfCircle(Q,O)&Angle(QAP)&Equal(MeasureOfAngle(QAP),90)",
            "conclusion": "IsTangentOfCircle(PA,O)"
        },
        "tangent_of_circle_property_length_equal(PA,PB,O)": {
            "premise": "IsTangentOfCircle(PA,O)&IsTangentOfCircle(PB,O)",
            "conclusion": "Equal(LengthOfLine(PA),LengthOfLine(PB))"
        }
    },
    "395": {
        "tangent_of_circle_property_perpendicular(PA,O,Q)": {
            "premise": "IsTangentOfCircle(PA,O)&Angle(QAP)&IsCentreOfCircle(Q,O)",
            "conclusion": "PerpendicularBetweenLine(QA,PA)"
        },
        "parallel_judgment_per_per(AB,CD)": {
            "premise": "PerpendicularBetweenLine(QA,PA)&PerpendicularBetweenLine(AP,DP)",
            "conclusion": "ParallelBetweenLine(AQ,PD)"
        }
    },
    "396": {
        "tangent_of_circle_property_length_equal(PA,PB,O)": {
            "premise": "IsTangentOfCircle(PA,O)&IsTangentOfCircle(PB,O)",
            "conclusion": "Equal(LengthOfLine(PA),LengthOfLine(PB))"
        },
        "perpendicular_bisector_judgment_distance_equal(CO,AB)": {
            "premise": "Collinear(AOB)&Angle(AOP)&Equal(MeasureOfAngle(AOP),90)&Equal(LengthOfLine(PA),LengthOfLine(PB))",
            "conclusion": "IsPerpendicularBisectorOfLine(PO,AB)"
        }
    },
    "397": {
        "tangent_of_circle_property_length_equal(PA,PB,O)": {
            "premise": "IsTangentOfCircle(PA,O)&IsTangentOfCircle(PB,O)",
            "conclusion": "Equal(LengthOfLine(PA),LengthOfLine(PB))"
        },
        "isosceles_triangle_judgment_line_equal(ABC)": {
            "premise": "Polygon(PAB)&Equal(LengthOfLine(PA),LengthOfLine(PB))",
            "conclusion": "IsoscelesTriangle(PAB)"
        }
    },
    "398": {
        "tangent_of_circle_property_length_equal(PA,PB,O)": {
            "premise": "IsTangentOfCircle(PA,O)&IsTangentOfCircle(PB,O)",
            "conclusion": "Equal(LengthOfLine(PA),LengthOfLine(PB))"
        },
        "kite_judgment_equal_and_equal(ABCD)": {
            "premise": "Polygon(PACB)&Equal(LengthOfLine(PA),LengthOfLine(PB))&Equal(LengthOfLine(CA),LengthOfLine(CB))",
            "conclusion": "Kite(PACB)"
        }
    }
}